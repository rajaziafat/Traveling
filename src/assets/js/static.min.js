"use strict";
const utilities = {
    restoreButtonState: function () {
      window.addEventListener("pageshow", (e) => {
        e.persisted && $(".loading").removeClass("loading");
      });
    },
  },
  tmLogger = {
    eventCategory: "",
    eventAction: "",
    eventLabel: "",
    eventValue: "",
    setEventCategory: function (e) {
      this.eventCategory = e;
    },
    setEventAction: function (e) {
      this.eventAction = e;
    },
    setEventLabel: function (e) {
      this.eventLabel = e;
    },
    setEventValue: function (e) {
      this.eventValue = e;
    },
    sendEvent: function (e) {
      $.ajax({
        url: _d.url.tmEvents,
        type: "POST",
        data: {
          eventName: e,
          eventCategory: this.eventCategory,
          eventAction: this.eventAction,
          eventLabel: this.eventLabel,
          eventValue: this.eventValue,
        },
      });
    },
  },
  cheapCarRental = {
    TL_LOCATION_LIST_CLASS: ".tl-container-wrapper",
    TL_SECTION_CLASS: ".cheap-car-rental",
    PICK_UP_DATE_ID: "#pick-date",
    DROP_OFF_DATE_ID: "#drop-date",
    SEARCH_URL: _d.url.search.createSearch,
    CHEAP_SEARCH_URL: "/cheap-car-rental/search",
    SEARCH_BUTTON_ID: "#location-submit",
    init: () => {
      const e = $(cheapCarRental.SEARCH_BUTTON_ID);
      $(cheapCarRental.TL_SECTION_CLASS).length &&
        (e.attr("id", "cheapCarRentalSearch"),
        cheapCarRental.searchRequest(e),
        cheapCarRental.openDropdownTrack(),
        cheapCarRental.trackLinkClickAndSubmit(),
        $("#disclaimer-button").on("click", function () {
          const e = $("#disclaimer");
          e.text(e.data("disclaimer"));
        }));
    },
    replaceResults(e) {
      const t = $(cheapCarRental.TL_LOCATION_LIST_CLASS);
      t.fadeTo(100, 0),
        setTimeout(() => {
          t.html(e).fadeTo(200, 1),
            cheapCarRental.openDropdownTrack(),
            cheapCarRental.trackLinkClickAndSubmit(),
            $(".tl-open").on("click", function (e) {
              e.preventDefault(),
                $(this).toggleClass("opened").next().slideToggle();
            });
        }, 100);
    },
    trackLinkClickAndSubmit() {
      $("[data-locid]").on("click", (e) => {
        e.preventDefault();
        const t = $(e.target);
        var a = t.data("locid"),
          o = t.data("cityid"),
          i = t.data("countid"),
          n = $("#pick-date").val() + " " + $("#pick-time").val(),
          r = $("#pick-time").val(),
          s = $("#drop-date").val() + " " + $("#drop-time").val(),
          l = $("#drop-time").val(),
          c = a,
          e = a,
          a = $("#driver-age-input").val(),
          a = {
            is_drop_off: $("#is-drop-off").is(":checked") ? 0 : 1,
            pick_up_country_id: i,
            pick_up_city_id: o,
            pick_up_location_id: c,
            drop_off_country_id: i,
            drop_off_city_id: o,
            partner_id: $("#partnerId").val(),
            exclude_locations: $("#excludeLocations").val(),
            drop_off_location_id: e,
            pickup_id: c,
            dropoff_id: e,
            pickup_from: n,
            pickup_to: s,
            pick_time: r,
            drop_time: l,
            luxOnly: 0,
            driver_age:
              "30-65" === a
                ? 35
                : "70+" === a
                ? 70
                : $(".driver-age-input").val(),
            residence_country:
              $("#residence-input").val() || $("#sb-residence").val(),
          };
        $("#cheapCarRentalSearch").addClass("loading");
        const d = window.open("about:blank");
        fetch(cheapCarRental.SEARCH_URL, {
          method: "POST",
          mode: "same-origin",
          credentials: "same-origin",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(a),
        })
          .then((e) => e.json())
          .then((e) => {
            e.success
              ? ((d.location = e.data.url),
                d.focus(),
                setTimeout(
                  () => $("#cheapCarRentalSearch").removeClass("loading"),
                  300
                ))
              : d.close();
          })
          .catch(() => {
            d.close();
          });
      });
    },
    searchRequest(i) {
      i.on("click", (e) => {
        e.preventDefault(), e.stopPropagation(), i.addClass("loading");
        var t = $(cheapCarRental.PICK_UP_DATE_ID).val(),
          a = $(cheapCarRental.DROP_OFF_DATE_ID).val(),
          { currency: o, language: e } = _d.s;
        fetch(cheapCarRental.CHEAP_SEARCH_URL, {
          method: "POST",
          mode: "same-origin",
          credentials: "same-origin",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            pickDate: t,
            dropOffDate: a,
            currency: o,
            language: e,
          }),
        })
          .then((e) => e.json())
          .then(({ response: e }) => {
            i.removeClass("loading"), cheapCarRental.replaceResults(e);
          })
          .catch((e) => {
            i.removeClass("loading"), console.error("Error:", e);
          });
      });
    },
    openDropdownTrack() {
      $(".tl-box").on("click", function () {
        const e = $(this).find(".tl-opens");
        e.toggleClass("opened");
        var t = e.data("open-index");
        $(`[data-elem-index=${t}]`).toggle("fast");
      });
    },
  };
cheapCarRental.init(),
  $.validator.addMethod("date", function (e, t, a) {
    var o = a[0],
      i = a[1],
      a = a[2],
      o = parseInt($(o).val());
    let n = parseInt($(i).val());
    i = parseInt($(a).val());
    if (0 === o || 0 === n || 0 === i) return !0;
    let r = !1;
    --n;
    a = new Date(i, n, o).getTime();
    let s = new Date();
    return (
      s.setTime(a),
      s.getFullYear() === i &&
        s.getMonth() === n &&
        s.getDate() === o &&
        (r = !0),
      r
    );
  }),
  $.validator.addMethod("validate_email", function (e) {
    return (
      !0 ===
      /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(
        e.trim()
      )
    );
  }),
  $.validator.addMethod("valueIsNotZero", function (e) {
    return "0" !== e;
  }),
  $.validator.addMethod("phoneCountryCode", function (e) {
    return !0 === /^(\(?\+?[0-9]*\)?)?[0-9_\- \(\)]*$/.test(e);
  }),
  $.validator.addMethod("phoneNumber", function (e) {
    return !0 === /^(\(?\+?[0-9]*\)?)?[0-9_\- \(\)]*$/.test(e) && 4 <= e.length;
  }),
  $.validator.addMethod("flightNumber", function (e) {
    return (
      !0 ===
      /(^|\b|[^a-z0-9]+|\s+)([a-z][a-z]|[a-z][0-9]|[0-9][a-z])[a-z]?[\s-]*[0-9]{1,4}[a-z]?(\s+|[^a-z0-9]+|$)/i.test(
        e
      )
    );
  }),
  ($.postJSON = function (e, t, a) {
    var o = new Date(),
      o = o.getTime() / 1e3 - 60 * o.getTimezoneOffset();
    "object" == typeof t
      ? (t = $.extend({ tm: o }, t))
      : "string" == typeof t && (t += (t ? "&" : "?") + "tm=" + o),
      $.post(
        e,
        t,
        function (e) {
          a && "function" == typeof a && a.call(this, e);
        },
        "json"
      );
  });
var scrollXY = {
    save: function () {
      var e,
        t = $(".modal-open");
      $("body").attr("data-pos", $(window).scrollTop()),
        $(window).on("load resize", function () {
          e = t.scrollHeight - $(".modal-open").height();
        }),
        t.on("touchmove", function () {
          return !!e;
        });
    },
    reset: function () {
      $(window).scrollTop($("body").attr("data-pos"));
    },
  },
  dates = {
    convert: function (e) {
      return e.constructor === Date
        ? e
        : e.constructor === Array
        ? new Date(e[0], e[1], e[2])
        : e.constructor === Number || e.constructor === String
        ? new Date(e)
        : "object" == typeof e
        ? new Date(e.year, e.month, e.date)
        : NaN;
    },
    compare: function (e, t) {
      return isFinite((e = this.convert(e).valueOf())) &&
        isFinite((t = this.convert(t).valueOf()))
        ? (t < e) - (e < t)
        : NaN;
    },
  };
$.sanitize = function (e) {
  var t = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#039;",
  };
  return e.replace(/[&<>"']/g, function (e) {
    return t[e];
  });
};
var navigation = {
    hamburgerDOM: $(".hamburger"),
    navAvatarDOM: $(".nav-avatar"),
    init: function () {
      navigation.hamburger(),
        navigation.section(),
        navigation.language(),
        navigation.currency(),
        navigation.phones(),
        navigation.callback.init(),
        navigation.footer();
    },
    hamburger: function () {
      var e = $(".banner-box"),
        t = $(".navigation.right"),
        a = 0 < e.length ? e.outerHeight() : 0;
      0 < e.length && t.css({ top: a - $(window).scrollTop() }),
        $(window).scroll(function () {
          var e = $(window).scrollTop();
          e < a && t.css({ top: a - e });
        }),
        navigation.hamburgerDOM.on("click", function () {
          navigation.toggle();
        });
    },
    toggle: function () {
      var e = $("header"),
        t = $(".navigation.right"),
        a = e.offset().top;
      $(this).hasClass("is-active")
        ? history.pushState("", document.title, _d.url.c)
        : (window.location.hash = "menu"),
        0 < a &&
          !e.hasClass("fixed") &&
          $(".navigation-block").css({ paddingBottom: a }),
        $(window).scrollTop() > a &&
          (t.css({ top: 0 }), $("html, body").animate({ scrollTop: a }, 100)),
        navigation.hamburgerDOM.toggleClass("is-active"),
        navigation.navAvatarDOM.toggleClass("hide"),
        $(".navigation.right, .header-container").toggleClass("opened"),
        $("body").toggleClass("menu-opened"),
        $(".head-sub-menu").removeClass("opened");
    },
    section: function () {
      $(".open-menu-section").on("click", function (e) {
        e.preventDefault();
        e = $(this).data("section");
        (window.location.hash = e.toString()),
          $(".header-container").addClass("behind"),
          $("#" + e)
            .removeClass("closed")
            .addClass("opened");
      }),
        $(".navigation-sub-menu-back").on("click", function (e) {
          e.preventDefault(),
            $(".header-container").removeClass("behind"),
            $(".navigation-sub-menu").removeClass("opened").addClass("closed"),
            (window.location.hash = "menu");
        });
    },
    language: function () {
      $(".change-language").on("click", function (e) {
        e.preventDefault();
        let t = $(this);
        var a = t.data("iso-code"),
          o = _d.s.language;
        let i = window.location.pathname;
        var n = window.location.search,
          r = window.location.hash;
        let s = "",
          l = $("#language-flag");
        e = l.attr("class").split(" ").pop();
        if (t.hasClass("selected"))
          return $(".navigation-sub-menu-back").trigger("click"), !1;
        $(".language-item").removeClass("selected"),
          t.parent().addClass("selected"),
          l.removeClass(e).addClass(a),
          $(".processing.language").addClass("active"),
          (s =
            0 === i.indexOf("/" + o)
              ? i.replace("/" + o, "/" + a) + n
              : "/" + a + window.location.pathname + n),
          (window.location =
            window.location.origin +
            s.replace("/" + _d.s.defaultLanguage + "/", "/") +
            r);
      });
    },
    currency: function () {
      $(".currency-item").on("click", function (e) {
        e.preventDefault();
        var t = $(this).data("currency"),
          a = { currency: t },
          e = _d.url.portal.setCurrency;
        if ($(this).hasClass("selected"))
          return $(".navigation-sub-menu-back").trigger("click"), !1;
        $(".currency-item").removeClass("selected"),
          $(this).addClass("selected"),
          $(".processing.currency").addClass("active"),
          "undefined" != typeof fakeRedirect &&
            fakeRedirect &&
            (a = {
              currency: t,
              GUID: search_GUID,
              searchGUID: fakeSearchGUID,
              carId: fakeCarId,
            }),
          $.post(e, a, function (e) {
            $("#currentCurrency").html(t),
              "undefined" != typeof fakeRedirect && fakeRedirect
                ? (document.location = e.searchUrl)
                : document.location.reload();
          });
      });
    },
    phones: function () {
      $(".select-box select")
        .on("focus", function () {
          $(this).parent().addClass("active");
        })
        .on("blur", function () {
          $(this).parent().removeClass("active");
        }),
        $(".all-numbers").on("change", function () {
          var e = $(this).find(":selected"),
            t = $(this).data("view");
          $(".selected-country-number." + t)
            .html(e.data("phone-number"))
            .attr("href", "tel:" + e.data("call"));
        });
    },
    callback: {
      init: function () {
        $("body").on("click", "#callback-request", function (e) {
          e.preventDefault();
          var e = [],
            t = $("#callback-form .validate-input"),
            a = !0,
            o = $(this);
          (e.name = $("#cbName").val()),
            (e.code = $("#cbCode").val()),
            (e.phone = $("#cbPhone").val()),
            o.addClass("loading"),
            t.parents(".form-row").removeClass("error-field"),
            t.each(function () {
              navigation.callback.validation($(this)) || (a = !1);
            }),
            a
              ? $.postJSON(_d.url.contacts.callback, e, function (e) {
                  e.error ||
                    ($(".callback-form").addClass("fade-out"),
                    $(".callback-ok").addClass("fade-in"),
                    t.each(function () {
                      $(this).val("");
                    })),
                    o.removeClass("loading");
                })
              : o.removeClass("loading");
        }),
          $("#callback-form .validate-input").on("blur change", function () {
            navigation.callback.validation($(this));
          });
      },
      validation: function (e) {
        var t = !1,
          a = $.trim(e.val());
        return (
          "number" === e.data("rule")
            ? (t =
                !(0 < a.length) ||
                !1 === /^(\(?\+?[0-9]*\)?)?[0-9_\- \(\)]*$/.test(a))
            : a || (t = !0),
          t
            ? (navigation.callback.addError(e.prop("id")), !1)
            : (navigation.callback.removeError(e.prop("id")), !0)
        );
      },
      addError: function (e) {
        var t = $("#" + e),
          e = $("#" + e + "_error");
        t
          .removeClass("success")
          .addClass("error")
          .parents(".form-row")
          .addClass("error-field"),
          e.addClass("show").removeClass("hidden");
      },
      removeError: function (e) {
        var t = $("#" + e),
          e = $("#" + e + "_error");
        t.removeClass("error").addClass("success"),
          e
            .removeClass("show")
            .addClass("hidden")
            .parents(".form-row")
            .removeClass("error-field");
      },
    },
    footer: function () {
      $(".footer-heading").on("click", function () {
        $(this).toggleClass("opened").next().slideToggle();
      });
    },
  },
  myModal = {
    init: function () {
      myModal.clickToOpen(),
        myModal.accordion(),
        myModal.closeAction(),
        $("div.modal")
          .on("show.bs.modal", function () {
            var e = this;
            (window.location.hash = e.id),
              scrollXY.save(),
              (window.onhashchange = function () {
                location.hash || $(e).modal("hide");
              });
            var t = 1040 + 10 * $(".modal:visible").length;
            $(this).css("z-index", t),
              setTimeout(function () {
                $(".modal-backdrop")
                  .not(".modal-stack")
                  .css("z-index", t - 1)
                  .addClass("modal-stack");
              }, 0);
          })
          .on("hidden.bs.modal", function () {
            scrollXY.reset(),
              history.pushState("", document.title, _d.url.c),
              $(".button.loading").removeClass("loading");
          }),
        $("body").on("click", ".link-to-deposit", function (e) {
          e.preventDefault(),
            $("#payment-policy-header").removeClass("opened"),
            $("#payment-policy-body").hide(),
            $(".modal-body").animate({ scrollTop: 0 }, "slow"),
            $("#payment-deposit-header").addClass("opened"),
            $("#payment-deposit-body").show();
        });
    },
    clickToOpen: function () {
      $("body")
        .on("click", ".open-modal", function (e) {
          e.preventDefault();
          var t = $(this),
            e = t.data("url"),
            t = t.data("id");
          myModal.openModal(t, e);
        })
        .on("click", ".open-static-modal", function (e) {
          e.preventDefault();
          e = $(this).data("id");
          myModal.openStaticModal(e);
        });
    },
    openStaticModal: function (e, t) {
      var a = $("#" + e),
        o = a.find(".modal-body-data");
      if (
        (a.modal({ keyboard: !1, backdrop: "static" }),
        a.modal("show"),
        void 0 !== t &&
          Object.prototype.hasOwnProperty.call(t, "noHeader") &&
          a.find(".modal-header").hide(),
        void 0 !== t &&
          Object.prototype.hasOwnProperty.call(t, "noCloseButtonInHeader") &&
          (a.find(".close").hide(), a.find(".modal-body-close-btn").hide()),
        void 0 !== t && Object.prototype.hasOwnProperty.call(t, "autoHeight"))
      )
        return !0;
      setTimeout(function () {
        o.height(window.innerHeight - a.find(".modal-header").outerHeight(!0));
      }, 100);
    },
    openModal: function (e, t, a) {
      a = void 0 === a ? {} : a;
      var o = $("#" + e),
        i = o.find(".modal-body-data"),
        n = o.find(".modal-title-data"),
        r = $("#modal-loading");
      r.addClass("show"),
        setTimeout(function () {
          i.height(
            parseInt(
              window.innerHeight - o.find(".modal-header").outerHeight(!0)
            )
          ),
            a.msg
              ? (o.modal("show"),
                r.removeClass("show"),
                setTimeout(function () {
                  $(".ajax-loaded-content:visible").html(a.msg);
                }, 100))
              : (a.noBaseHref && (_d.url.bh = ""),
                $.post(
                  t,
                  { isPopup: 1 },
                  function (e) {
                    i.html(e.data.body),
                      n.html(e.data.title),
                      o.modal("show"),
                      r.removeClass("show");
                  },
                  "json"
                ));
        }, 100);
    },
    closeAction: function () {
      $("body")
        .on("click", ".close-modal, .modal-body-close-btn", function (e) {
          e.preventDefault(), myModal.close($(this).data("id"));
        })
        .on("click", ".trigger-mc", function (e) {
          e.preventDefault(), $(".modal .close").trigger("click");
        })
        .on("click", ".trigger-force-mc", function (e) {
          e.preventDefault(), myModal.forceClose();
        })
        .on("click", ".trigger-f5", function (e) {
          e.preventDefault(), location.reload();
        });
    },
    close: function (e) {
      $("#" + e).modal("hide");
    },
    forceClose: function () {
      $(".modal").modal("hide");
    },
    accordion: function () {
      $("body").on("click", ".car-detail-terms-header", function () {
        $(this).hasClass("no-arrow") ||
          $(this).toggleClass("opened").next().slideToggle();
      });
    },
  },
  searchbox = {
    pickDate: "",
    page: $("#document").data("page"),
    sendSearchBoxEvent: !1,
    init: function () {
      searchbox.select(),
        searchbox.isDropOff(),
        searchbox.calendar(),
        searchbox.age(),
        searchbox.residence(),
        searchbox.submit(),
        searchbox.ssf(),
        searchbox.time();
      -1 !== ["static", "partners", "car-types", "search"].indexOf(_d.c) &&
        (searchbox.sendSearchBoxEvent =
          "search" === _d.c ? "search" : "landing");
    },
    getFormData: function () {
      var e = "undefined" != typeof isAutocomplete && isAutocomplete,
        t = $("#pick-date").val() + " " + $("#pick-time").val(),
        a = $("#drop-date").val() + " " + $("#drop-time").val(),
        o = (e ? $("#pickPlaceID") : $("#pick-place")).val(),
        i = (e ? $("#dropPlaceID") : $("#drop-place")).val(),
        n = $("#driver-age-input").val();
      return {
        is_drop_off: $("#is-drop-off").is(":checked") ? 0 : 1,
        driver_age: "30-65" === n ? 35 : "80+" === n ? 80 : n,
        pick_up_country_id: (e
          ? $("#pickCountryID")
          : $("#pick-country")
        ).val(),
        pick_up_city_id: (e ? $("#pickCityID") : $("#pick-city")).val(),
        pick_up_location_id: o,
        drop_off_country_id: (e
          ? $("#dropCountryID")
          : $("#drop-country")
        ).val(),
        drop_off_city_id: (e ? $("#dropCityID") : $("#drop-city")).val(),
        drop_off_location_id: i,
        pickup_id: o,
        dropoff_id: i,
        pickup_from: t,
        pickup_to: a,
        pick_time: $("#pick-time").val(),
        drop_time: $("#drop-time").val(),
        partner_id: $("#partnerId").val(),
        exclude_locations: $("#excludeLocations").val(),
        luxOnly: _d.s.luxOnly,
        residence_country: $("#sb-residence").val(),
      };
    },
    autoSave: function () {
      $.post(_d.url.search.autoSave, searchbox.getFormData());
    },
    isDropOff: function () {
      $("#is-drop-off").on("click", function () {
        var e = $(".sb-group.drop-off");
        $(this).prop("checked") ? e.hide() : e.show();
      });
    },
    select: function () {
      $(".location-select")
        .on("change", function () {
          var e,
            i = $(this),
            n = i.data("type"),
            t = i.data("group"),
            r = [
              "",
              _d.t.please_select_country,
              _d.t.please_select_city,
              _d.t.please_select_place,
            ],
            s = [
              "",
              "#" + t + "-country",
              "#" + t + "-city",
              "#" + t + "-place",
            ],
            a = searchbox.getFormData();
          i.addClass("selected"),
            1 === n &&
              ("undefined" != typeof lpg &&
                ((e = i.find("option:selected").data("url")),
                $("#countryUrl").val(e),
                $("#cityUrl").val(""),
                $("#locationUrl").val(""),
                linkBuilder.generateUrl()),
              $("#" + t + "-city, #" + t + "-place")
                .removeClass("selected")
                .prop("disabled", !0)
                .empty(),
              $("#" + t + "-place").append(
                '<option value="0">' + r[3] + "</option>"
              )),
            2 === n &&
              ("undefined" != typeof lpg &&
                ((e = i.find("option:selected").data("url")),
                $("#cityUrl").val(e),
                $("#locationUrl").val(""),
                linkBuilder.generateUrl()),
              $("#" + t + "-place")
                .removeClass("selected")
                .prop("disabled", !0)
                .empty()),
            3 !== n
              ? (0 < i.val()
                  ? $(s[n + 1])
                      .parent()
                      .addClass("loading")
                  : $(s[n + 1])
                      .parent()
                      .removeClass("loading"),
                $.post(
                  _d.url.landing_generator,
                  { type: n, id: i.val(), post: a },
                  function (e) {
                    if (!e.error) {
                      var t = n + 1,
                        a = $(s[t]);
                      ("undefined" != typeof lpg
                        ? i.parents(".sb-group")
                        : i.parent()
                      )
                        .next()
                        .find("select")
                        .prop("disabled", !1);
                      for (var o = t; o < s.length; o++)
                        $($(s[o]))
                          .empty()
                          .append('<option value="0">' + r[o] + "</option>")
                          .parent()
                          .removeClass("loading");
                      $.each(e.data, function (e, t) {
                        a.append(
                          '<option value="' +
                            t.id +
                            '" data-country="' +
                            t.countryCode +
                            '" data-city="' +
                            t.p1name +
                            '" data-url="' +
                            (t.iata ? t.iata.toLowerCase() : t.url) +
                            '" data-iata="' +
                            t.iata +
                            '" data-type="' +
                            t.type_id +
                            '">' +
                            t.name +
                            "</option>"
                        );
                      }),
                        "undefined" == typeof lpg &&
                          (1 === e.data.length
                            ? ((a[0].selectedIndex = 1), a.change())
                            : a.focus());
                    }
                  },
                  "json"
                ))
              : "undefined" != typeof lpg
              ? ((a = i.find("option:selected").data("url")),
                $("#locationUrl").val(a),
                linkBuilder.generateUrl())
              : searchbox.autoSave();
        })
        .on("click", function () {
          $(this).parent().removeClass("error");
        }),
        $(".choose-time").on("change", function () {
          var e = $(this);
          $(".choose-time").parent().removeClass("error"),
            $(".inline-error").slideUp(),
            e.addClass("selected"),
            "undefined" != typeof timeApprove && (timeApprove.change = !0),
            e.hasClass("clone") &&
              $("#" + e.attr("id").replace("-clone", "")).val(e.val()),
            "0" !== e.val() && searchbox.autoSave();
        });
    },
    parseDate: function (e) {
      return (
        (e = new Date(e)).getFullYear() +
        "-" +
        ("0" + (e.getMonth() + 1)).slice(-2) +
        "-" +
        ("0" + e.getDate()).slice(-2)
      );
    },
    defaultMonthCount: 6,
    calendar: function () {
      var o = "",
        i = !1;
      $(".open-modal-datepicker").on("click", function () {
        var e = $(this);
        $("#datepickerModal").modal("show"),
          (o = e.attr("id")),
          (i = e.hasClass("clone"));
      }),
        $("#datepickerModal").on("shown.bs.modal", function () {
          var e = $(".modal-header").outerHeight(!0),
            t = $(".modal-container").outerHeight(!0),
            a = $(".modal-weekdays").outerHeight(!0);
          $(".date-field.in-modal").removeClass("active"),
            $("#pick-date-modal-ui").addClass("active"),
            $(".datepickerInModal").height(window.innerHeight - (e + t + a)),
            searchbox.datepicker(o, i),
            searchbox.scrollToSelectedMonth();
        }),
        $(".modal-dp-nav.next").on("click", function () {
          (searchbox.defaultMonthCount = searchbox.defaultMonthCount + 3),
            $(".datepicker-inline").datepicker("option", {
              numberOfMonths: [searchbox.defaultMonthCount, 1],
            }),
            $(".datepicker-inline")
              .find(".ui-datepicker-next")
              .trigger("click");
        });
    },
    scrollToSelectedMonth: function () {
      var e = $(".datepickerInModal"),
        t = $(".datepicker-inline:visible .ui-state-active").closest(
          ".ui-datepicker-group"
        );
      e.scrollTop(e.scrollTop() + t.offset().top - e.offset().top);
    },
    datepicker: function (e, s) {
      var a = "us" === _d.s.language ? "D, M d" : "D, d M",
        t = $(".datepicker-inline");
      $(".datepickerInModal").addClass(
        e === "pick-date-ui" + (s ? "-clone" : "") ? "pick-view" : "drop-view"
      ),
        t.each(function () {
          var r = $(this),
            e = "#" + r.attr("id").replace("-modal-inline", ""),
            t = $.datepicker.parseDate("yy-mm-dd", $(e).val());
          r.datepicker({
            firstDay: 1,
            altField: e,
            altFormat: "yy-mm-dd",
            numberOfMonths: [searchbox.defaultMonthCount, 1],
            showButtonPanel: !1,
            dateFormat: a,
            defaultDate: t,
            prevText: "",
            nextText: "",
            inline: !0,
            minDate: new Date(new Date().getTime()),
            dayNames: _d.t.datepicker_weekdays_full,
            dayNamesShort: _d.t.datepicker_weekdays_short,
            dayNamesMin: _d.t.datepicker_weekdays_short,
            monthNames: _d.t.datepicker_months_full,
            monthNamesShort: _d.t.datepicker_months_short,
            beforeShowDay: function (e) {
              var t,
                a = $("#pick-date-modal-ui"),
                o = $("#drop-date-modal-ui"),
                e = searchbox.parseDate(e);
              if ("pick-date-modal-inline" === r.attr("id")) {
                if (
                  a.hasClass("selected") &&
                  null !==
                    (t = $("#drop-date-modal-inline").datepicker("getDate"))
                ) {
                  if ((t = searchbox.parseDate(t)) && e === t)
                    return [!0, "ui-state-pickup-date", ""];
                  if (
                    searchbox.pickDate &&
                    t &&
                    0 < dates.compare(e, searchbox.pickDate) &&
                    dates.compare(e, t) < 0
                  )
                    return [!0, "ui-state-pickup-dates", ""];
                }
                return [!0, "", ""];
              }
              if (o.hasClass("selected")) {
                if (searchbox.pickDate && e === searchbox.pickDate)
                  return [!0, "ui-state-pickup-date", ""];
                if (
                  ((t = $("#drop-date").val()),
                  searchbox.pickDate &&
                    t &&
                    0 < dates.compare(e, searchbox.pickDate) &&
                    dates.compare(e, t) < 0)
                )
                  return [!0, "ui-state-pickup-dates", ""];
              }
              return [!0, "", ""];
            },
            onSelect: function (e) {
              var t = $("#pick-date-modal-ui"),
                a = $("#drop-date-modal-ui"),
                o = $("#pick-date-modal-inline"),
                i = $("#drop-date-modal-inline"),
                n = "";
              "pick-date-modal-inline" === r.attr("id")
                ? ((n = r.datepicker("getDate")),
                  $(
                    "#pick-date-modal-ui, #pick-date-ui" +
                      (s ? ", #pick-date-ui-clone" : "")
                  ).val(e),
                  i.datepicker("getDate") < o.datepicker("getDate")
                    ? (n.setDate(n.getDate()),
                      i.datepicker("option", "defaultDate", n),
                      i.datepicker("option", "minDate", n),
                      a.val(e),
                      $(
                        "#drop-date-ui" + (s ? ", #drop-date-ui-clone" : "")
                      ).val(e))
                    : i.datepicker("option", "minDate", n),
                  o.hide(),
                  i.show(),
                  $(".datepickerInModal")
                    .removeClass("pick-view")
                    .addClass("drop-view"),
                  searchbox.scrollToSelectedMonth(),
                  $(".date-field.in-modal").removeClass("active"),
                  t.hasClass("selected") ||
                    setTimeout(function () {
                      i
                        .find(".ui-state-active")
                        .removeClass("ui-state-active ui-state-hover"),
                        i
                          .find(".ui-state-pickup-dates")
                          .removeClass("ui-state-pickup-dates");
                    }, 0),
                  a.addClass("active selected"),
                  t.addClass("selected"))
                : (a.addClass("selected"),
                  $(".datepickerInModal").removeClass("pick-view drop-view"),
                  $(
                    "#drop-date-modal-ui, #drop-date-ui" +
                      (s ? ", #drop-date-ui-clone" : "")
                  ).val(e),
                  i.datepicker("getDate") < o.datepicker("getDate") &&
                    (o.datepicker("setDate", e),
                    $("#pick-date-ui" + (s ? ", #pick-date-ui-clone" : "")).val(
                      e
                    )),
                  setTimeout(function () {
                    $("#datepickerModal").modal("hide");
                  }, 1e3)),
                (searchbox.pickDate = $("#pick-date").val()),
                $(".datepicker-inline").datepicker("refresh"),
                "undefined" != typeof modification &&
                "reservation-show" === searchbox.page
                  ? modification.updateDateTime()
                  : searchbox.autoSave(),
                "undefined" != typeof timeApprove && (timeApprove.change = !0);
            },
          }),
            $(".ui-datepicker").addClass("notranslate");
        }),
        $("#drop-date-modal-ui").on("click", function () {
          $(".date-field.in-modal").removeClass("active"),
            $(".datepickerInModal")
              .removeClass("pick-view")
              .addClass("drop-view"),
            $(this).addClass("active"),
            $("#pick-date-modal-inline").hide(),
            $("#drop-date-modal-inline").show(),
            searchbox.scrollToSelectedMonth();
        }),
        $("#pick-date-modal-ui").on("click", function () {
          $(".date-field.in-modal").removeClass("active"),
            $(".datepickerInModal")
              .removeClass("drop-view")
              .addClass("pick-view"),
            $(this).addClass("active"),
            $("#drop-date-modal-inline").hide(),
            $("#pick-date-modal-inline").show(),
            searchbox.scrollToSelectedMonth();
        }),
        t.hide(),
        $("#pick-date-modal-inline").show();
    },
    age: function () {
      $("#sb-age, #sb-age-clone").on("click", function () {
        var e;
        searchbox.sendSearchBoxEvent &&
          ((e =
            "landing" === searchbox.sendSearchBoxEvent
              ? $(this).hasClass("sticky")
                ? "sticky-search-box"
                : "search-box"
              : "change-search"),
          myDataLayer.send(e, { action: "Age" })),
          $("#driverAgeModal").modal("show");
      }),
        $("#driverAgeModal").on("shown.bs.modal", function () {
          setTimeout(function () {
            var e = $("#driverAgeModal"),
              t = e.find(".modal-body"),
              a = $(".age-list.selected");
            t.height(
              window.innerHeight - e.find(".modal-header").outerHeight(!0)
            ),
              t.scrollTop(
                t.scrollTop() +
                  a.position().top -
                  t.height() / 2 +
                  a.outerHeight() / 2
              );
          }, 30);
        }),
        $(".age-list").on("click", function () {
          var e = $(this),
            t = $("#sb-age-clone"),
            a = e.data("value");
          $(".age-list").removeClass("selected"),
            e.addClass("selected"),
            $("#driverAgeModal").modal("hide"),
            $("#sb-age").text(a),
            0 < t.length && t.text(a),
            $("#driver-age-input").val(a),
            searchbox.autoSave();
        });
    },
    residence: function () {
      $("#sb-country, #sb-country-clone").on("click", function () {
        var e;
        searchbox.sendSearchBoxEvent &&
          ((e =
            "landing" === searchbox.sendSearchBoxEvent
              ? $(this).hasClass("sticky")
                ? "sticky-search-box"
                : "search-box"
              : "change-search"),
          myDataLayer.send(e, { action: "Residency" })),
          $("#residenceModal").modal("show");
      }),
        $("#residenceModal").on("shown.bs.modal", function () {
          setTimeout(function () {
            var e = $("#residenceModal"),
              t = e.find(".modal-body"),
              a = $(".residence-list.selected");
            t.height(
              window.innerHeight - e.find(".modal-header").outerHeight(!0)
            ),
              t.scrollTop(
                t.scrollTop() +
                  a.position().top -
                  t.height() / 2 +
                  a.outerHeight() / 2
              );
          }, 30);
        }),
        $(".residence-list").on("click", function () {
          var e = $(this),
            t = $("#sb-country-clone"),
            a = e.data("value");
          $(".residence-list").removeClass("selected"),
            e.addClass("selected"),
            $("#residenceModal").modal("hide"),
            $("#sb-country").text(e.text()),
            0 < t.length && t.text(e.text()),
            $("#sb-residence")
              .find('option[value="' + a + '"]')
              .prop("selected", !0),
            searchbox.autoSave();
        });
    },
    time: function () {
      $(".fake-time").on("click", function () {
        $("#" + $(this).data("modal") + "-modal").modal("show");
      }),
        $("#pick-time-modal, #drop-time-modal").on(
          "shown.bs.modal",
          function (o) {
            setTimeout(function () {
              var e = $(o.target),
                t = e.find(".modal-body"),
                a = t.find(".time-list.selected");
              0 === a.data("value")
                ? t.scrollTop(588)
                : (t.height(
                    window.innerHeight - e.find(".modal-header").outerHeight(!0)
                  ),
                  t.scrollTop(
                    t.scrollTop() +
                      a.position().top -
                      t.height() / 2 +
                      a.outerHeight() / 2
                  ));
            }, 30);
          }
        ),
        $(".time-list").on("click", function () {
          var e = $(this),
            t = e.data("type"),
            a = e.data("value"),
            o = (e.data("show"), e.data("show")),
            i = $("#" + t + "-fake-clone");
          $('.time-list[data-type="' + t + '"]').removeClass("selected"),
            e.addClass("selected"),
            $(".time-select.error").removeClass("error"),
            $("#" + t + "-modal").modal("hide"),
            $("#" + t + "-fake").text(o || a),
            0 < i.length && i.text(a),
            $("#" + t).val(a),
            "pick-time" === t &&
              "0" === $("#drop-time").val() &&
              ($("#drop-time").val(a),
              $("#drop-time-fake").text(o || a),
              0 < i.length && $("#drop-time-fake-clone").text(o || a),
              $('.time-list[data-type="drop-time"]')
                .removeClass("selected")
                .filter('[data-value="' + a + '"]')
                .addClass("selected")),
            "drop-time" === t &&
              "0" === $("#pick-time").val() &&
              ($("#pick-time").val(a),
              $("#pick-time-fake").text(o || a),
              0 < i.length && $("#pick-time-fake-clone").text(o || a),
              $('.time-list[data-type="pick-time"]')
                .removeClass("selected")
                .filter('[data-value="' + a + '"]')
                .addClass("selected")),
            "undefined" != typeof modification &&
            "reservation-show" === searchbox.page
              ? modification.updateDateTime()
              : searchbox.autoSave();
        });
    },
    submit: function () {
      $("body").on("click", "#sb-form-submit", function (e) {
        e.preventDefault();
        var t = $(this),
          a = !1,
          o = [],
          e = searchbox.getFormData();
        if ("undefined" != typeof timeApproveModal && !timeApprove.change)
          return !1;
        if (
          ($("#sb-form-submit").addClass("loading"),
          "0" === e.pick_up_country_id
            ? ($("#pick-country").parent().addClass("error"),
              o.push(_d.t.selectPickUpCountry),
              (a = !0))
            : "0" === e.pick_up_city_id
            ? ($("#pick-city").parent().addClass("error"),
              o.push(_d.t.selectPickUpCity),
              (a = !0))
            : "0" === e.pick_up_location_id &&
              ($("#pick-place").parent().addClass("error"),
              o.push(_d.t.selectPickUp),
              (a = !0)),
          1 === e.is_drop_off &&
            ("0" === e.drop_off_country_id
              ? ($("#drop-country").parent().addClass("error"),
                o.push(_d.t.selectDropOffCountry),
                (a = !0))
              : "0" === e.drop_off_city_id
              ? ($("#drop-city").parent().addClass("error"),
                o.push(_d.t.selectDropOffCity),
                (a = !0))
              : "0" === e.drop_off_location_id &&
                ($("#drop-place").parent().addClass("error"),
                o.push(_d.t.selectDropOff),
                (a = !0))),
          "0" === e.pick_time &&
            ($(".time-select.pick").addClass("error"),
            o.push(_d.t.selectPickTime),
            (a = !0)),
          "0" === e.drop_time &&
            ($(".time-select.drop").addClass("error"),
            o.push(_d.t.selectDropTime),
            (a = !0)),
          e.pickup_from === e.pickup_to &&
            "0" !== e.pick_time &&
            "0" !== e.pick_time &&
            ($(".time-select").addClass("error"),
            o.push(_d.t.wrongTimes),
            (a = !0)),
          a)
        ) {
          a = $(".inline-error");
          a.html("").append('<ul id="error-list"></ul>'),
            t.removeClass("loading");
          for (var i = 0; i < o.length; i++)
            $("#error-list").append("<li>" + o[i] + "</li>");
          return searchbox.secondFormError(), a.slideDown(), !1;
        }
        $.post(
          _d.url.search.createSearch,
          e,
          function (t) {
            var e;
            t.success
              ? (document.location.href = t.data.url)
              : ((e = $(".inline-error")),
                $("#sb-form-submit").removeClass("loading"),
                e.html("").append('<ul id="error-list"></ul>'),
                $.each(t.message, function (e) {
                  void 0 !== t.errors.message[e] &&
                    $("#error-list").append(
                      "<li>" + t.errors.message[e] + "</li>"
                    );
                }),
                $.each(t.errors.fields, function (e, t) {
                  $("#" + t).addClass("error");
                }),
                "undefined" != typeof onlyDates &&
                  onlyDates &&
                  ($("#ssf-submit").removeClass("loading"),
                  $("html, body").animate({ scrollTop: 0 }, 400)),
                e.slideDown());
          },
          "json"
        );
      });
    },
    ssf: function () {
      var o, t, a, i, n;
      $(".ssf-change").on("click", function (e) {
        e.preventDefault(), $("html,body").animate({ scrollTop: 0 }, 600);
      }),
        $("#ssf-submit").on("click", function (e) {
          e.preventDefault();
          e = $("#sb-form-submit");
          (0 < e.length ? e : $("#location-submit")).click();
        }),
        0 < $(".sticky-search-box").length &&
          ((o = 0),
          $(window).scroll(function () {
            var e = $(window).scrollTop(),
              t = $(".sticky-search-box"),
              a = $(".search-box-wrapper");
            a.offset().top + a.outerHeight(!0) < e
              ? (0 === o &&
                  ((window.hj =
                    window.hj ||
                    function () {
                      (hj.q = hj.q || []).push(arguments);
                    }),
                  window.hj("trigger", "stickySearchBox"),
                  myDataLayer.send("sticky-search-box-impression"),
                  o++),
                t.addClass("fixed"))
              : t.removeClass("fixed");
          }),
          (t = $("#search-box-wrapper")),
          (a = $("#sb-age, #sb-country")),
          (i = $(".close-search-box")),
          (n = $("#search-wrapper")),
          $(".button-sticky-search, .sticky-sb-info").on("click", function (e) {
            e.preventDefault(),
              n.css({ height: n.outerHeight(!0) }),
              t.addClass("sticky-search-box-form"),
              t
                .find(".trigger-gtm-sb")
                .toggleClass("trigger-gtm-sb trigger-gtm-sb-sticky"),
              a.addClass("sticky"),
              setTimeout(function () {
                t.addClass("opened");
              }, 50),
              i.removeClass("hide"),
              $("html, body").addClass("menu-opened"),
              myDataLayer.send("sticky-search-box", { action: "Open" });
          }),
          i.on("click", function (e) {
            e.preventDefault(),
              n.css({ height: "auto" }),
              t.removeClass("sticky-search-box-form opened"),
              t
                .find(".trigger-gtm-sb-sticky")
                .toggleClass("trigger-gtm-sb-sticky trigger-gtm-sb"),
              a.removeClass("sticky"),
              $("html, body").removeClass("menu-opened"),
              i.addClass("hide"),
              myDataLayer.send("sticky-search-box", { action: "Close" });
          }));
    },
    secondFormError: function () {
      "undefined" != typeof onlyDates &&
        onlyDates &&
        $("html, body").animate({ scrollTop: 0 }, 400, function () {
          $("#ssf-submit").removeClass("loading");
        });
    },
  },
  pickDL = {
    init: function () {
      pickDL.clickToOpen(), pickDL.closeAction();
    },
    clickToOpen: function () {
      $("body").on("click", ".open-pick-modal", function (e) {
        e.preventDefault(), pickDL.openModal();
      });
    },
    openModal: function () {
      var e = $(".pick-modal"),
        t = $(".pick-modal-body"),
        a = $(".pick-modal-load-data"),
        o = $("#search-box-wrapper");
      e.fadeIn(400),
        e.removeClass().addClass("pick-modal"),
        $("body").addClass("pick-modal-open"),
        a.show(),
        $("#search-wrapper").height(o.outerHeight()),
        o.appendTo(t);
    },
    closeAction: function () {
      $(".pick-modal-close").on("click", function (e) {
        e.preventDefault(), pickDL.close();
      });
    },
    close: function () {
      var e = $("#search-wrapper");
      e.css("height", "auto"),
        $(".pick-modal").hide(),
        $("body").removeClass("pick-modal-open"),
        $("#search-box-wrapper").appendTo(e);
    },
  },
  myCookie = {
    setCookie: function (e, t, a) {
      var o = a
        ? ((o = new Date()).setTime(o.getTime() + 24 * a * 60 * 60 * 1e3),
          "; expires=" + o.toGMTString())
        : "";
      document.cookie = e + "=" + t + o + "; secure; path=/";
    },
    getCookie: function (e) {
      if (
        0 < document.cookie.length &&
        -1 !== (t = document.cookie.indexOf(e + "="))
      ) {
        var t = t + e.length + 1,
          e = document.cookie.indexOf(";", t);
        return (
          -1 === e && (e = document.cookie.length),
          decodeURI(document.cookie.substring(t, e))
        );
      }
      return "";
    },
  },
  // autocomplete = {
  //   pickVal: "",
  //   dropVal: "",
  //   init: function () {
  //     autocomplete.action(),
  //       autocomplete.engine($(".typeahead.pick"), "pick"),
  //       autocomplete.engine($(".typeahead.drop"), "drop"),
  //       autocomplete.locationSubmit();
  //   },
  //   action: function () {
  //     $("body")
  //       .on("keyup", ".tt-input", function () {
  //         var e = $(this),
  //           t = e.val(),
  //           a = e.parents(".autocomplete-box");
  //         e.hasClass("pick")
  //           ? (autocomplete.pickVal = t)
  //           : (autocomplete.dropVal = t),
  //           0 < t.length
  //             ? a.find(".clear-auto-complete").removeClass("hide")
  //             : a.find(".clear-auto-complete").addClass("hide");
  //       })
  //       .on("blur", ".tt-input", function () {
  //         var e = $(this),
  //           t = e.val(),
  //           a = $("#pickPlaceID").val(),
  //           o = $("#dropPlaceID").val(),
  //           o = e.hasClass("pick") ? a : o,
  //           e = e.parents(".autocomplete-box");
  //         0 < t.length && 0 !== o && e.find(".typeahead").removeClass("error");
  //       })
  //       .on("focus", ".tt-input", function () {
  //         var e = $(this).offset().top - 8;
  //         $("html, body").animate({ scrollTop: e }, 600);
  //       }),
  //       $(".clear-auto-complete").on("click", function (e) {
  //         e.preventDefault();
  //         var t = $(this),
  //           e = t.parents(".autocomplete-box");
  //         e.find(".typeahead").typeahead("val", ""),
  //           e.find(".place-handler").text("").addClass("hide"),
  //           e.find(".tt-input").blur(),
  //           t.addClass("hide"),
  //           autocomplete.updateLocationID(
  //             "0",
  //             "0",
  //             "0",
  //             e.hasClass("pick") ? "pick" : "drop"
  //           );
  //       }),
  //       $(".place-handler").on("click", function () {
  //         var e = $(this),
  //           t = e.parents(".autocomplete-box"),
  //           a = t.find(".tt-input");
  //         a.val().length < 1 && t.find(".clear-auto-complete").addClass("hide"),
  //           a.focus(),
  //           e.addClass("hide");
  //       });
  //   },
  //   engine: function (o, i) {
  //     var n = o.parents(".autocomplete-box"),
  //       r = new Bloodhound({
  //         datumTokenizer: Bloodhound.tokenizers.obj.whitespace("value"),
  //         queryTokenizer: Bloodhound.tokenizers.whitespace,
  //         remote: {
  //           url: _d.url.autocomplete + "/%QUERY/",
  //           wildcard: "%QUERY",
  //           cache: !1,
  //         },
  //       });
  //     o.typeahead(
  //       {
  //         highlight: !1,
  //         minLength: "undefined" != typeof locationWithDefaultsData ? 0 : 2,
  //         hint: !1,
  //       },
  //       {
  //         name: "locations",
  //         source: function (e, t, a) {
  //           "undefined" != typeof locationWithDefaultsData && "" === e
  //             ? t(locationWithDefaultsData)
  //             : r.search(e, t, a);
  //         },
  //         display: "place",
  //         limit: 30,
  //         templates: {
  //           empty: [
  //             '<div class="location-404">' +
  //               $(".not-found-message").text() +
  //               "</div>",
  //           ],
  //           pending: function () {
  //             return '<div class="searching">' + _d.t.searching + "</div>";
  //           },
  //           suggestion: function (e) {
  //             return (
  //               $(".tt-dataset").animate({ scrollTop: 0 }, 100),
  //               '<div class="location-item ' +
  //                 e.location +
  //                 '">' +
  //                 e.placeHlt +
  //                 ', <span class="spot">' +
  //                 e.cityHlt +
  //                 ", " +
  //                 e.countryHlt +
  //                 "</span></div>"
  //             );
  //           },
  //         },
  //       }
  //     ).bind("typeahead:select", function (e, t) {
  //       var a =
  //         (t.placeID !== t.cityID ? t.place + ", " : "") +
  //         t.city +
  //         ", " +
  //         t.country;
  //       autocomplete.updateLocationID(t.countryID, t.cityID, t.placeID, i),
  //         o.typeahead(
  //           "val",
  //           "pick" === i ? autocomplete.pickVal : autocomplete.dropVal
  //         ),
  //         n.find(".place-handler").text(a).removeClass("hide"),
  //         n.find(".clear-auto-complete").removeClass("hide"),
  //         o.blur();
  //     });
  //   },
  //   updateLocationID: function (e, t, a, o) {
  //     var i = $("#pickCountryID"),
  //       n = $("#pickCityID"),
  //       r = $("#pickPlaceID"),
  //       s = $("#dropCountryID"),
  //       l = $("#dropCityID"),
  //       c = $("#dropPlaceID");
  //     "modal" === autocomplete.mode
  //       ? ((i = $("#pick-country-modal")),
  //         (n = $("#pick-city-modal")),
  //         (r = $("#pick-place-modal")),
  //         (s = $("#drop-country-modal")),
  //         (l = $("#drop-city-modal")),
  //         (c = $("#drop-place-modal")))
  //       : "modify-modal" === autocomplete.mode &&
  //         ((i = $(".modal #pick-country-modal")),
  //         (n = $(".modal #pick-city-modal")),
  //         (r = $(".modal #pick-place-modal")),
  //         (s = $(".modal #drop-country-modal")),
  //         (l = $(".modal #drop-city-modal")),
  //         (c = $(".modal #drop-place-modal"))),
  //       e && ("pick" === o ? i : s).val(e),
  //       t && ("pick" === o ? n : l).val(t),
  //       a && ("pick" === o ? r : c).val(a);
  //   },
  //   locationSubmit: function () {
  //     $("#location-submit").on("click", function (e) {
  //       e.preventDefault();
  //       var a = $(this),
  //         t = !1,
  //         o = [],
  //         i = $("#pick-date").val() + " " + $("#pick-time").val(),
  //         n = $("#pick-time").val(),
  //         r = $("#drop-date").val() + " " + $("#drop-time").val(),
  //         s = $("#drop-time").val(),
  //         l = $("#pickPlaceID").val(),
  //         c = $("#dropPlaceID").val(),
  //         e = $("#driver-age-input").val(),
  //         e = {
  //           is_drop_off: $("#is-drop-off").is(":checked") ? 0 : 1,
  //           pick_up_country_id: $("#pickCountryID").val(),
  //           pick_up_city_id: $("#pickCityID").val(),
  //           pick_up_location_id: l,
  //           drop_off_country_id: $("#dropCountryID").val(),
  //           drop_off_city_id: $("#dropCityID").val(),
  //           drop_off_location_id: c,
  //           pickup_id: l,
  //           dropoff_id: c,
  //           pickup_from: i,
  //           pickup_to: r,
  //           pick_time: n,
  //           drop_time: s,
  //           partner_id: $("#partnerId").val(),
  //           exclude_locations: $("#excludeLocations").val(),
  //           luxOnly: 0,
  //           driver_age:
  //             "30-65" === e
  //               ? 35
  //               : "70+" === e
  //               ? 70
  //               : $(".driver-age-input").val(),
  //           residence_country: $("#sb-residence").val(),
  //         };
  //       if (
  //         ((0 !== l && 0 !== $(".place-handler.pick").html().length) ||
  //           ($(".typeahead.pick").addClass("error"),
  //           o.push(_d.t.selectPickUp),
  //           (t = !0)),
  //         1 === e.is_drop_off &&
  //           ((0 !== c && 0 !== $(".place-handler.drop").html().length) ||
  //             ($(".typeahead.drop").addClass("error"),
  //             o.push(_d.t.selectDropOff),
  //             (t = !0))),
  //         "0" === n &&
  //           ($(".time-select.pick").addClass("error"),
  //           o.push(_d.t.selectPickTime),
  //           (t = !0)),
  //         "0" === s &&
  //           ($(".time-select.drop").addClass("error"),
  //           o.push(_d.t.selectDropTime),
  //           (t = !0)),
  //         i == r &&
  //           "0" !== n &&
  //           "0" !== s &&
  //           ($(".time-select").addClass("error"),
  //           o.push(_d.t.wrongTimes),
  //           (t = !0)),
  //         t)
  //       ) {
  //         t = $(".inline-error");
  //         t.html("").append('<ul id="error-list"></ul>'),
  //           a.removeClass("loading");
  //         for (var d = 0; d < o.length; d++)
  //           $("#error-list").append("<li>" + o[d] + "</li>");
  //         return autocomplete.secondFormError(), t.slideDown(), !1;
  //       }
  //       $.post(
  //         _d.url.search.createSearch,
  //         e,
  //         function (t) {
  //           var e;
  //           t.success
  //             ? (document.location.href = t.data.url)
  //             : ((e = $(".inline-error")),
  //               a.removeClass("loading"),
  //               e.html("").append('<ul id="error-list"></ul>'),
  //               $.each(t.errors.message, function (e) {
  //                 void 0 !== t.errors.message[e] &&
  //                   $("#error-list").append(
  //                     "<li>" + t.errors.message[e] + "</li>"
  //                   );
  //               }),
  //               $.each(t.errors.fields, function (e, t) {
  //                 $("#" + t).addClass("error");
  //               }),
  //               e.slideDown());
  //         },
  //         "json"
  //       );
  //     });
  //   },
  //   secondFormError: function () {
  //     "undefined" != typeof onlyDates &&
  //       onlyDates &&
  //       $("html, body").animate({ scrollTop: 0 }, 400, function () {
  //         $("#ssf-submit").removeClass("loading");
  //       });
  //   },
  // },
  linkBuilder = {
    init: function () {
      $("#pick-language").on("change", function () {
        linkBuilder.generateUrl();
      }),
        new ClipboardJS(".btn-copy").on("success", function (e) {
          e.clearSelection(),
            (e.trigger.textContent = _d.t.copied),
            window.setTimeout(function () {
              e.trigger.textContent = _d.t.copy;
            }, 2e3);
        }),
        $("#generateLink").on("click", function (e) {
          e.preventDefault(),
            linkBuilder.generateUrl(),
            $(".clipboard").slideDown(400, function () {
              $("html,body")
                .stop()
                .animate({ scrollTop: $(".clipboard").offset().top }, 500);
            }),
            $("#generateLink").removeClass("loading");
        }),
        $("#addCode").on("keyup", function () {
          linkBuilder.generateUrl();
        });
    },
    generateUrl: function () {
      var e = $("#pick-language").val(),
        t = $("#countryUrl").val(),
        a = $("#cityUrl").val(),
        o = $("#locationUrl").val(),
        i = $("#addCode").val(),
        i =
          _d.url.host +
          ("en" !== e ? "/" + e : "") +
          (0 < t.length ? "/" + t : "") +
          (0 < a.length ? "/" + a : "") +
          (0 < o.length && "undefined" !== o ? "/" + o : "") +
          (0 < i.length ? "?a_aid=" + i : "");
      $("#copyLink").text(i).attr("href", i);
    },
  },
  awardCodeGenerator = {
    init: function () {
      var e = $("#generateLink");
      $("#pick-color, #pick-size").on("change", function () {
        awardCodeGenerator.generateUrl();
      }),
        new ClipboardJS(".btn-copy").on("success", function (e) {
          e.clearSelection(),
            (e.trigger.textContent = _d.t.copied),
            window.setTimeout(function () {
              e.trigger.textContent = _d.t.copyCode;
            }, 2e3);
        }),
        e.on("click", function (e) {
          e.preventDefault(),
            awardCodeGenerator.generateUrl(),
            $(".clipboard").slideDown(),
            $("#generateLink").removeClass("loading");
        });
    },
    generatePreview: function (e) {
      $("#awardImage").attr("src", e);
    },
    generateUrl: function () {
      var e = $("#pick-color").val(),
        t = $("#pick-size").val(),
        e =
          _d.url.bh +
          "/assets/badge/discovercars-" +
          (0 < e.length ? e : "") +
          (0 < t.length ? "-" + t + ".png" : ""),
        t =
          '<a href="' +
          _d.url.bh +
          '"><img alt="DiscoverCars.com Excellent Car Rental Service" src="' +
          e +
          '"></a>'.toString();
      awardCodeGenerator.generatePreview(e), $("#copyCode").text(unescape(t));
    },
  },
  toc = _d.isSeoExperimentGrow245
    ? {
        spyScroll: !1,
        spy: !1,
        scrollTabText: "",
        setHorizontalScrollItem: function () {
          const e = $(".toc-scroll"),
            t = $(".toc-scroll-item.active");
          var a;
          t[0] &&
            toc.scrollTabText !== t.text() &&
            ((a = t.offset().left),
            (toc.scrollTabText = t.text()),
            e.animate({ scrollLeft: e.scrollLeft() + a }, 100));
        },
        setScrollSpy: function () {
          var e = {
            nested: !0,
            offset: function () {
              return 120;
            },
          };
          (toc.spyScroll = new Gumshoe("#tocList a", e)),
            (toc.spy = new Gumshoe("#tocScrollList a", e));
        },
        initBurgerMenuClick: function () {
          $(".toc-burger-menu, .toc-item").click(function () {
            const e = $(".toc-shadow");
            0 < e.css("opacity")
              ? (e.fadeTo(400, 0),
                setTimeout(() => {
                  e.css("height", 0);
                }, 400))
              : e.css("height", "100%").fadeTo(400, 1),
              $(".toc-bottom-box").animate({ height: "toggle" }),
              $("body").toggleClass("no-scroll"),
              $(".sticky-search-box.fixed").slideToggle("slow");
          });
        },
        createTocElements: function (e, s) {
          const l = $("#tocList");
          e.forEach(function (e, t) {
            if ($(e).is(":visible")) {
              const i = $("<li/>", { class: "toc-item" }),
                n = $("<li/>", { class: "toc-scroll-item" });
              var a = $("<a/>", {
                  href: "#toc-" + t,
                  id: "link" + t,
                  class: "toc-link",
                  text: e.textContent,
                }),
                o = $("<a/>", {
                  href: "#toc-" + t,
                  id: "link" + t,
                  class: "toc-scroll-link",
                  text: e.textContent,
                });
              const r = $("<div/>", { class: "toc-wrap" });
              n.append(o),
                s.append(n),
                r.append(a),
                i.append(r),
                l.append(i),
                e.setAttribute("id", "toc-" + t);
            }
          });
        },
        content: function () {
          tooltip.init();
          var e = [].slice.call($("main h2"));
          const t = $(".toc-section"),
            a = $(".fake-toc-section"),
            o = t.offset().top,
            i = $("#tocScrollList");
          setTimeout(() => {
            toc.setHorizontalScrollItem();
          }, 1e3),
            toc.createTocElements(e, i),
            i.on("click", function (e) {
              e.stopPropagation(),
                setTimeout(() => {
                  toc.setHorizontalScrollItem();
                }, 100);
            }),
            $(".toc-item a, .toc-scroll-item a").on("click", function () {
              var e = $("#" + $(this).attr("href").replace("#", ""));
              $("html, body").animate(
                {
                  scrollTop:
                    e.offset().top -
                    $(".sticky-search-box").outerHeight(!0) -
                    20,
                },
                400
              );
            }),
            o <= scroll && t.toggleClass("fixed"),
            $(window).scroll(function () {
              a.toggleClass("fixed", o <= window.scrollY),
                t.toggleClass("fixed", o <= window.scrollY),
                toc.setHorizontalScrollItem();
            }),
            toc.initBurgerMenuClick(),
            toc.setScrollSpy(),
            (toc.scrollTabText = $(".toc-scroll-item.active").text());
        },
      }
    : {
        content: function () {
          var i = document,
            n = i.getElementById("tocList");
          [].slice.call($("main h2")).forEach(function (e, t) {
            var a = i.createElement("a");
            a.setAttribute("href", "#toc-" + t),
              a.setAttribute("id", "link" + t),
              a.setAttribute("class", "toc-link"),
              (a.textContent = e.textContent);
            var o = i.createElement("li");
            o.setAttribute("class", "toc-item"),
              o.appendChild(a),
              n.appendChild(o),
              e.setAttribute("id", "toc-" + t);
          }),
            $(".toc-clickable").on("click", function () {
              $(this).toggleClass("opened"),
                $(".table-of-contents-box").slideToggle();
            }),
            $(".toc-item a").on("click", function () {
              var e = $("#" + $(this).attr("href").replace("#", ""));
              $("html, body").animate(
                {
                  scrollTop:
                    e.offset().top -
                    $(".sticky-search-box").outerHeight(!0) -
                    20,
                },
                400
              );
            });
        },
      };
Element.prototype.closest ||
  (Element.prototype.matches ||
    (Element.prototype.matches =
      Element.prototype.msMatchesSelector ||
      Element.prototype.webkitMatchesSelector),
  (Element.prototype.closest = function (e) {
    var t = this;
    if (!document.documentElement.contains(this)) return null;
    do {
      if (t.matches(e)) return t;
    } while (null !== (t = t.parentElement));
    return null;
  })),
  (function () {
    function e(e, t) {
      t = t || { bubbles: !1, cancelable: !1, detail: void 0 };
      var a = document.createEvent("CustomEvent");
      return a.initCustomEvent(e, t.bubbles, t.cancelable, t.detail), a;
    }
    "function" != typeof window.CustomEvent &&
      ((e.prototype = window.Event.prototype), (window.CustomEvent = e));
  })(),
  (function (e, t) {
    "function" == typeof define && define.amd
      ? define([], function () {
          return t(e);
        })
      : "object" == typeof exports
      ? (module.exports = t(e))
      : (e.Gumshoe = t(e));
  })(
    "undefined" != typeof global
      ? global
      : "undefined" != typeof window
      ? window
      : this,
    function (d) {
      function p(e) {
        e &&
          e.sort(function (e, t) {
            return o(e.content) < o(t.content) ? -1 : 1;
          });
      }
      function a() {
        return (
          d.innerHeight + d.pageYOffset >=
          Math.max(
            document.body.scrollHeight,
            document.documentElement.scrollHeight,
            document.body.offsetHeight,
            document.documentElement.offsetHeight,
            document.body.clientHeight,
            document.documentElement.clientHeight
          )
        );
      }
      function u(e, t) {
        var a;
        !e ||
          ((a = e.nav.closest("li")) &&
            (a.classList.remove(t.navClass),
            e.content.classList.remove(t.contentClass),
            i(a, t),
            h("gumshoeDeactivate", a, {
              link: e.nav,
              content: e.content,
              settings: t,
            })));
      }
      var f = {
          navClass: "active",
          contentClass: "active",
          nested: !1,
          nestedClass: "active",
          offset: 0,
          reflow: !1,
          events: !0,
        },
        h = function (e, t, a) {
          a.settings.events &&
            ((a = new CustomEvent(e, {
              bubbles: !0,
              cancelable: !0,
              detail: a,
            })),
            t.dispatchEvent(a));
        },
        o = function (e) {
          var t = 0;
          if (e.offsetParent)
            for (; e; ) (t += e.offsetTop), (e = e.offsetParent);
          return 0 <= t ? t : 0;
        },
        m = function (e, t, a) {
          (e = e.getBoundingClientRect()),
            (t =
              "function" == typeof (t = t).offset
                ? parseFloat(t.offset())
                : parseFloat(t.offset));
          return a
            ? parseInt(e.bottom, 10) <
                (d.innerHeight || document.documentElement.clientHeight)
            : parseInt(e.top, 10) <= t;
        },
        g = function (e, t) {
          return !(!a() || !m(e.content, t, !0));
        },
        i = function (e, t) {
          t.nested &&
            e.parentNode &&
            (e = e.parentNode.closest("li")) &&
            (e.classList.remove(t.nestedClass), i(e, t));
        },
        v = function (e, t) {
          !t.nested ||
            ((e = e.parentNode.closest("li")) &&
              (e.classList.add(t.nestedClass), v(e, t)));
        };
      return function (e, t) {
        var a,
          i,
          n,
          o,
          r,
          s = {
            setup: function () {
              (a = document.querySelectorAll(e)),
                (i = []),
                Array.prototype.forEach.call(a, function (e) {
                  var t = document.getElementById(
                    decodeURIComponent(e.hash.substr(1))
                  );
                  t && i.push({ nav: e, content: t });
                }),
                p(i);
            },
          };
        s.detect = function () {
          var e,
            t,
            a,
            o = (function (e, t) {
              var a = e[e.length - 1];
              if (g(a, t)) return a;
              for (var o = e.length - 1; 0 <= o; o--)
                if (m(e[o].content, t)) return e[o];
            })(i, r);
          o
            ? (n && o.content === n.content) ||
              (u(n, r),
              (t = r),
              !(e = o) ||
                ((a = e.nav.closest("li")) &&
                  (a.classList.add(t.navClass),
                  e.content.classList.add(t.contentClass),
                  v(a, t),
                  h("gumshoeActivate", a, {
                    link: e.nav,
                    content: e.content,
                    settings: t,
                  }))),
              (n = o))
            : n && (u(n, r), (n = null));
        };
        function l(e) {
          o && d.cancelAnimationFrame(o),
            (o = d.requestAnimationFrame(s.detect));
        }
        function c(e) {
          o && d.cancelAnimationFrame(o),
            (o = d.requestAnimationFrame(function () {
              p(i), s.detect();
            }));
        }
        s.destroy = function () {
          n && u(n, r),
            d.removeEventListener("scroll", l, !1),
            r.reflow && d.removeEventListener("resize", c, !1),
            (r = o = n = a = i = null);
        };
        return (
          (r = (function () {
            var a = {};
            return (
              Array.prototype.forEach.call(arguments, function (e) {
                for (var t in e) {
                  if (!e.hasOwnProperty(t)) return;
                  a[t] = e[t];
                }
              }),
              a
            );
          })(f, t || {})),
          s.setup(),
          s.detect(),
          d.addEventListener("scroll", l, !1),
          r.reflow && d.addEventListener("resize", c, !1),
          s
        );
      };
    }
  );
let whichFormIsSubmitted = null,
  buttonName = null;
var affiliate = {
    isTermsCheckboxChecked: !1,
    init: function () {
      affiliate.action(), affiliate.validate();
    },
    action: function () {
      $(window).scroll(function () {
        var e = $("header, main"),
          t = $(window).scrollTop(),
          a = $(".banner-box"),
          o = $(".navigation.right"),
          a = 0 < a.length ? a.outerHeight() : 0;
        a < t
          ? (e.addClass("fixed"), o.css({ top: 0 }))
          : (e.removeClass("fixed"), o.css({ top: a - t }));
      }),
        $(".aff-scroll-to-form").on("click", function (e) {
          e.preventDefault(), affiliate.scrollTo($("#aff-section-form"), 1e3);
        }),
        $(".aff-scroll-to-next").on("click", function (e) {
          e.preventDefault(), affiliate.scrollTo($(".aff-page:first"), 400);
        }),
        $(".aff-scroll-to").on("click", function (e) {
          e.preventDefault(), $(".hamburger").click();
          var t = $(this).data("scroll-to");
          setTimeout(function () {
            affiliate.scrollTo($("#" + t), 400);
          }, 400);
        }),
        $("#affSignInBtn").on("click", function () {
          $("#affiliateFormError").hide();
          let e = $("#tcAgree");
          var t = $('label[for="' + e.attr("id") + '"]');
          (whichFormIsSubmitted = "affiliateForm"),
            (buttonName = "affSignInBtn"),
            affiliate.updateCheckboxStatus(e, t),
            affiliate.validate();
        }),
        $("#affSignInBtnUpperForm").on("click", function () {
          $("#affiliateUpperFormError").hide();
          let e = $("#tcAgreeUpperForm");
          var t = $('label[for="' + e.attr("id") + '"]');
          (whichFormIsSubmitted = "affiliateUpperForm"),
            (buttonName = "affSignInBtnUpperForm"),
            affiliate.updateCheckboxStatus(e, t),
            affiliate.validate();
        }),
        $("#tcAgree").on("click", function () {
          var e = $(this),
            t = $('label[for="' + $(this).attr("id") + '"]');
          affiliate.updateCheckboxStatus(e, t);
        }),
        $("#tcAgreeUpperForm").on("click", function () {
          var e = $(this),
            t = $('label[for="' + $(this).attr("id") + '"]');
          affiliate.updateCheckboxStatus(e, t);
        });
    },
    updateCheckboxStatus: function (e, t) {
      e.is(":checked")
        ? ((affiliate.isTermsCheckboxChecked = !0), t.removeClass("error"))
        : ((affiliate.isTermsCheckboxChecked = !1), t.addClass("error"));
    },
    scrollTo: function (e, t) {
      $("html, body").animate(
        { scrollTop: e.offset().top - $("header").height() },
        t
      );
    },
    validate: function () {
      $.validator.addMethod("validate_username", function (e) {
        return !0 === /^([a-zA-Z0-9_-]+)$/.test(e);
      });
      let t = $("#" + buttonName);
      $("#" + whichFormIsSubmitted).validate({
        errorClass: "error",
        focusInvalid: !1,
        errorElement: "div",
        rules: {
          affEmail: { validate_email: !0 },
          affUsername: { validate_username: !0 },
        },
        errorPlacement: function (e, t) {
          e.appendTo(t.next());
        },
        invalidHandler: function () {
          t.removeClass("loading");
        },
        submitHandler: function () {
          !0 === affiliate.isTermsCheckboxChecked
            ? (t.attr("disabled", !0),
              $.postJSON(
                _d.url.affiliate.signup,
                $("#" + whichFormIsSubmitted).serialize(),
                function (e) {
                  t.removeClass("loading").attr("disabled", !1),
                    e.error
                      ? "message" === e.errorType
                        ? $.each(e.message, function (e, t) {
                            $(
                              "#" + e + "Error",
                              "#" + whichFormIsSubmitted
                            ).append(
                              '<div id="' +
                                e +
                                '-error" class="error">' +
                                t +
                                "</div>"
                            ),
                              $("#" + e, "#" + whichFormIsSubmitted).addClass(
                                "error"
                              );
                          })
                        : $("#" + whichFormIsSubmitted + "Error")
                            .html(e.message)
                            .show()
                      : (myDataLayer.send("post-affiliate"),
                        myModal.openModal("thankYouAffiliateModal", "", {
                          msg: e.message,
                        }));
                }
              ))
            : t.removeClass("loading");
        },
      });
    },
  },
  myDataLayer = {
    insuranceHandler: $(".ga-insurance-item"),
    extrasHandler: $(".ga-extra-item"),
    category: Object.prototype.hasOwnProperty.call(_d, "a")
      ? _d.a.country +
        "/" +
        _d.a.city +
        "/" +
        _d.a.location +
        "/" +
        _d.a.dropCountry +
        "/" +
        _d.a.dropCity +
        "/" +
        _d.a.dropLocation
      : "unknown",
    storagePrefix: "dataLayer-",
    init: function () {
      if (
        ($(document).on("click", ".click-on-car", function () {
          var e = $(this),
            t = e.data("sipp"),
            a = e.data("name"),
            o = e.data("event-action"),
            e = e.data("brand");
          try {
            window.dataLayer.push({
              event: "eec.impressionClick",
              ecommerce: {
                click: {
                  actionField: { list: "Search Results" },
                  products: [
                    {
                      id: t,
                      name: a,
                      brand: e,
                      category: myDataLayer.category,
                      variant: "",
                      list: "Search results",
                      position: o,
                    },
                  ],
                },
              },
            });
          } catch (e) {}
        }),
        "booking-index" === _d.page)
      ) {
        if (Object.prototype.hasOwnProperty.call(_d.a, "addedToBasket"))
          try {
            null !== myDataLayer.getProducts() &&
              (window.dataLayer.push({
                event: "eec.remove",
                ecommerce: {
                  remove: {
                    actionField: { list: "PDP" },
                    products: myDataLayer.getProducts(),
                  },
                },
              }),
              myDataLayer.removeProducts());
          } catch (e) {}
        var t = [];
        this.insuranceHandler.each(function () {
          var e = $(this);
          e.is(":visible") &&
            t.push({ id: e.data("id").toString(), name: e.data("name") });
        }),
          this.extrasHandler.each(function () {
            var e = $(this);
            t.push({ id: e.data("id"), name: e.data("name") });
          });
        try {
          window.dataLayer.push({
            event: "eec.detail",
            ecommerce: {
              detail: {
                actionField: { list: "PDP" },
                products: [
                  {
                    id: _d.a.sipp,
                    name: _d.a.name,
                    brand: _d.a.brand,
                    category: myDataLayer.category,
                    variant: "",
                  },
                ],
              },
            },
          }),
            window.dataLayer.push({
              event: "eec.impressionViewPDP",
              ecommerce: { impressions: t },
            });
        } catch (e) {}
      }
      if (
        ("reservation-payment" === _d.page &&
          window.dataLayer.push({
            event: "eec.checkout",
            ecommerce: {
              checkout: {
                actionField: { step: 2 },
                products: myDataLayer.getProducts(),
              },
            },
          }),
        "reservation-show" === _d.page &&
          "undefined" != typeof sendTransaction &&
          sendTransaction)
      ) {
        var e = [];
        if (
          (e.push({
            id: _d.a.sipp,
            name: _d.a.name,
            brand: _d.a.brand,
            category: myDataLayer.category,
            variant: "",
            quantity: "1",
            price: _d.a.carPrice,
          }),
          Object.prototype.hasOwnProperty.call(_d.a, "insurances") &&
            0 < _d.a.insurances.length)
        )
          for (var a = 0; a < _d.a.insurances.length; a++)
            e.push(_d.a.insurances[a]);
        if (
          Object.prototype.hasOwnProperty.call(_d.a, "extras") &&
          0 < _d.a.extras.length
        )
          for (var o = 0; o < _d.a.extras.length; o++) e.push(_d.a.extras[o]);
        try {
          window.dataLayer.push({
            event: "eec.purchase",
            ecommerce: {
              currencyCode: _d.a.currency,
              purchase: {
                actionField: {
                  id: _d.rn,
                  affiliation: "DCH",
                  revenue: _d.a.revenue,
                  tax: "0.00",
                  shipping: "0.00",
                  coupon: "",
                },
                products: e,
              },
            },
          }),
            myDataLayer.removeProducts();
        } catch (e) {}
      }
    },
    send: function (e, t) {
      if (((t = void 0 !== t ? t : []), "booking" === e)) {
        var a = [];
        a.push({
          id: _d.a.sipp,
          name: _d.a.name,
          brand: _d.a.brand,
          category: myDataLayer.category,
          variant: "",
          quantity: "1",
        }),
          this.insuranceHandler.each(function () {
            var e = $(this);
            e.is(":visible") &&
              $("#" + e.data("input-id")).is(":checked") &&
              a.push({
                id: e.data("id").toString(),
                name: e.data("name"),
                quantity: "1",
              });
          }),
          this.extrasHandler.each(function () {
            var e = $(this);
            0 < e.val() &&
              a.push({
                id: e.data("id"),
                name: e.data("name"),
                quantity: e.val(),
              });
          });
        try {
          window.dataLayer.push({
            event: "eec.add",
            ecommerce: { add: { actionField: { list: "PDP" }, products: a } },
          }),
            myDataLayer.setProducts(a);
        } catch (e) {}
        try {
          window.dataLayer.push({
            event: "eec.checkout",
            ecommerce: { checkout: { actionField: { step: 1 }, products: a } },
          }),
            myDataLayer.setProducts(a);
        } catch (e) {}
      }
      if ("submitted-booking-form" === e)
        try {
          window.dataLayer.push({ event: "submittedBookingForm" });
        } catch (e) {}
      if ("sticky-search-box-impression" === e)
        try {
          window.dataLayer.push({ event: "stickySearchBoxImpression" });
        } catch (e) {}
      if (
        ("sticky-search-box" === e &&
          dataLayer.push({
            stickySearchBox: { action: t.action },
            event: "stickySearchBox",
          }),
        "search-box" === e &&
          dataLayer.push({
            searchBox: { action: t.action },
            event: "searchBox",
          }),
        "change-search" === e &&
          dataLayer.push({
            changeSearchData: { action: t.action },
            event: "changeSearchData",
          }),
        "selected-extras-count" === e)
      ) {
        var o = 0;
        if (
          ($(".ga-extra-item").each(function () {
            0 < $(this).val() && o++;
          }),
          0 < o)
        )
          try {
            window.dataLayer.push({
              selectedExtrasCount: { count: o },
              event: "selectedExtrasCount",
            });
          } catch (e) {}
      }
      if ("payment" === e)
        try {
          var i = t.paymentMethod;
          window.dataLayer.push({
            event: "eec.checkout",
            ecommerce: {
              checkout: {
                actionField: {
                  step: 2,
                  option: myDataLayer.capitalizeFirstLetter(i),
                },
                products: myDataLayer.getProducts(),
              },
            },
          });
        } catch (e) {}
      if ("post-affiliate" === e)
        try {
          window.dataLayer.push({ event: "PostAffiliate_Click" });
        } catch (e) {}
      if ("payment-error" === e)
        try {
          window.dataLayer.push({
            paymentError: { label: t.fieldName },
            event: "paymentError",
          });
        } catch (e) {}
    },
    sendImpressionEvent: function (e, t) {
      window.dataLayer.push({
        event: "eec." + t,
        ecommerce: { impressions: e },
      });
    },
    setProducts: function (e) {
      storage.save(myDataLayer.storagePrefix + _d.a.sipp, e);
    },
    getProducts: function () {
      if (void 0 === _d.a.sipp)
        for (var e in localStorage)
          if (e.substring(0, 10) === myDataLayer.storagePrefix)
            return storage.get(e);
      return storage.get(myDataLayer.storagePrefix + _d.a.sipp);
    },
    removeProducts: function () {
      for (var e in localStorage)
        e.substring(0, 10) === myDataLayer.storagePrefix && storage.delete(e);
    },
    capitalizeFirstLetter: function (e) {
      return e.charAt(0).toUpperCase() + e.slice(1);
    },
    prepareUrl: function (e) {
      return e.replace(/\s+/g, "-").toLowerCase();
    },
  },
  myBooking = {
    mode: !1,
    form: !1,
    numberPrefix: $("#myBookingFormPage").data("booking-number-prefix"),
    init: function () {
      myBooking.signIn(), myBooking.prefix(), myBooking.bookingCard();
    },
    signIn: function () {
      $(".my-booking-btn").on("click", function (e) {
        e.preventDefault();
        e = $(this);
        if (e.hasClass("loading")) return !1;
        e.addClass("loading"),
          (myBooking.form = e.data("form")),
          (myBooking.mode = e.data("mode")),
          $("#" + myBooking.form).submit();
      }),
        $(".my-booking-forms").each(function () {
          $(this).validate({
            errorClass: "error",
            focusInvalid: !1,
            errorElement: "div",
            rules: {
              booking_number: { required: !0 },
              booking_email: { validate_email: !0 },
            },
            errorPlacement: function (e, t) {
              $(t).next().html(e);
            },
            highlight: function (e, t) {
              $(e).addClass(t);
            },
            unhighlight: function (e, t) {
              $(e).removeClass(t);
            },
            invalidHandler: function () {
              setTimeout(function () {
                $(".my-booking-btn").removeClass("loading");
              }, 10);
            },
            submitHandler: function () {
              var e = String(
                  $("#my-booking-number-" + myBooking.mode)
                    .val()
                    .toUpperCase()
                ),
                t = String(
                  $("#my-booking-email-" + myBooking.mode)
                    .val()
                    .toLowerCase()
                );
              $.postJSON(
                _d.url.signInToMyBooking,
                { number: e.trim(), email: btoa(t.trim()) },
                function (e) {
                  document.location.href = e.data.route;
                }
              );
            },
          });
        });
    },
    prefix: function () {
      $("#my-booking-number-page")
        .on("focus", function () {
          let e = $(this);
          0 === e.val().length && e.val(myBooking.numberPrefix);
        })
        .on("blur", function () {
          let e = $(this);
          e.val() === myBooking.numberPrefix && e.val("");
        })
        .on("input", function () {
          $(this).val(function (e, t) {
            return myBooking.numberPrefix + t.replace(/[^\d]/gi, "");
          });
        });
    },
    bookingCard: function () {
      $(".booking-card-href").on("click", function () {
        $(this).find(".my-booking-card").addClass("position-relative opening");
      });
    },
  },
  authentication = {
    popUpAuthWindow: null,
    init: function () {
      authentication.actions(),
        authentication.showStep1(),
        "authorization-login" === _d.page &&
          authentication.signUp($("#main-wrapper-body"));
    },
    actions: function () {
      $("body")
        .on("click", "#openLoginModal", function () {
          tmLogger.setEventLabel($(this).data("label")),
            tmLogger.sendEvent("userAccountLogin"),
            authentication.showStep1(),
            myModal.openStaticModal("loginModal"),
            navigation.toggle(),
            authentication.signUp($(".modal"));
        })
        .on("click", ".trigger-login-modal", function (e) {
          e.preventDefault(),
            tmLogger.setEventLabel($(this).data("label")),
            tmLogger.sendEvent("userAccountLogin"),
            authentication.showStep1(),
            myModal.openStaticModal("loginModal"),
            authentication.signUp($(".modal"));
        })
        .on("click", "#continueWithEmail", function () {
          authentication.showStep2();
        })
        .on("click", ".prev-step", function () {
          "step-2" === $(this).attr("data-step")
            ? authentication.showStep2()
            : authentication.showStep1();
        });
    },
    showStep1: function () {
      $("#sign-up-email").val(""),
        $("#authentication-logo").show(),
        $("#authentication-step").hide(),
        $(".authentication-wrapper").hide().filter(".step-1").show();
    },
    showStep2: function () {
      $("#authentication-logo").hide(),
        $("#authentication-step").attr("data-step", "step-1").show(),
        $("#signUpWithEmail").removeClass("loading"),
        $(".authentication-wrapper").hide().filter(".step-2").show();
    },
    showStep3: function () {
      $("#authentication-step").attr("data-step", "step-2"),
        $(".authentication-wrapper").hide().filter(".step-3").show();
    },
    signUp: function (e) {
      e.on("click", ".sign-up-btn", function (e) {
        e.preventDefault();
        const t = $(this);
        if (t.hasClass("loading")) return !1;
        t.addClass("loading"), $("#signUpWithEmailForm").submit();
      });
      const t = $(document)
        .find("#signUpWithEmailForm")
        .validate({
          errorClass: "error",
          focusInvalid: !1,
          errorElement: "div",
          rules: { sign_up_email: { validate_email: !0 } },
          errorPlacement: function (e, t) {
            $(t).next().html(e);
          },
          highlight: function (e, t) {
            $(e).addClass(t);
          },
          unhighlight: function (e, t) {
            $(e).removeClass(t);
          },
          invalidHandler: function () {
            setTimeout(function () {
              $(".sign-up-btn").removeClass("loading");
            }, 10);
          },
          submitHandler: function (e) {
            $.postJSON(
              _d.url.authentication.magicLink,
              $(e).serialize(),
              function (e) {
                e.error
                  ? (t.showErrors({ sign_up_email: e.message }),
                    $(".sign-up-btn").removeClass("loading").blur())
                  : ($("#signUpSuccessMessage").html(e.message),
                    authentication.showStep3());
              }
            );
          },
        });
    },
  },
  embedVideo = {
    p: $(".modal"),
    init: function () {
      embedVideo.action();
    },
    action: function () {
      $(".embed-video-banner").on("click", function () {
        var e = $("#embed-ad");
        e.attr("src", e.data("src")),
          setTimeout(function () {
            $(".full-size-player-modal").removeClass("hide");
          }, 100);
      }),
        $(".close-player-modal").on("click", function () {
          $("#embed-ad").attr("src", ""),
            $(".full-size-player-modal").addClass("hide");
        });
    },
  },
  subscribe = {
    init: function () {
      $("#newsletterBtn").on("click", function (e) {
        e.preventDefault(), subscribe.validate();
      }),
        $("#checkAppPlatform").on("click", function (e) {
          e.preventDefault(),
            navigator.userAgent.match(/iPhone/i) ||
            navigator.userAgent.match(/iPod/i)
              ? (window.location = _d.url.mobileApp.apple)
              : (window.location = _d.url.mobileApp.google);
        });
    },
    validateEmail: function (e) {
      return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(
        e
      );
    },
    validate: function () {
      var e = $("#newsletterEmail").val(),
        t = $(".newsletter-form .success-msg"),
        a = $(".newsletter-form .error-msg"),
        o = $("#newsletterBtn"),
        i = $("#newsletterForm"),
        n = $(".newsletter-policy");
      if (o.hasClass("loading disabled")) return !1;
      subscribe.validateEmail(e)
        ? (o.prop("disabled", !0).addClass("loading disabled"),
          $.postJSON(_d.url.contacts.subscribe, i.serialize(), function (e) {
            e.error
              ? (t.hide(),
                a.empty().html(e.message).show(),
                subscribe.enableBtn())
              : (a.hide(), t.show(), i.hide(), n.hide());
          }))
        : (t.hide(), a.show(), subscribe.enableBtn());
    },
    enableBtn: function () {
      setTimeout(function () {
        $("#newsletterBtn")
          .prop("disabled", !1)
          .removeClass("disabled loading");
      }, 10);
    },
  },
  filter = {
    filteredCategories: [],
    topFilterElement: null,
    paging:
      void 0 !== sp
        ? sp.search.paging
        : "undefined" == typeof searchingInLandings ||
          searchingInLandings.search.paging,
    limit:
      void 0 !== sp
        ? sp.search.limit
        : "undefined" != typeof searchingInLandings
        ? searchingInLandings.search.limit
        : 40,
    init: function () {
      filter.toggle(),
        filter.backToTop(),
        filter.filterText(!1),
        filter.resetFilter(),
        filter.filtersApplied(),
        filter.action(),
        filter.showMore(),
        $("#search-filter-body").on("change", "input", function () {
          var t = $(this),
            e = t.parents(".flt-type"),
            a = t.parents(".flt-opts"),
            o = "checkbox" === t.prop("type") ? "checkbox" : "radio",
            i = t.data("category"),
            n = void 0 !== t.attr("data-shortcut") && t.data("shortcut"),
            r = $(".remove-filter");
          a.addClass("filter"),
            "checkbox" == o && 0 < e.find("[type=checkbox]:checked").length
              ? (e.find(".flt-head").addClass("selected"),
                -1 === filter.filteredCategories.indexOf(i) &&
                  filter.filteredCategories.push(i))
              : (e.find(".flt-head").removeClass("selected"),
                -1 !== (e = filter.filteredCategories.indexOf(i)) &&
                  filter.filteredCategories.splice(e, 1)),
            "checkbox" != o || t.is(":checked")
              ? n &&
                $('.top-filter-item[data-shortcut="' + n + '"]').addClass(
                  "active"
                )
              : (n &&
                  $('.top-filter-item[data-shortcut="' + n + '"]').removeClass(
                    "active"
                  ),
                0 < r.length &&
                  r.each(function () {
                    var e = $(this);
                    e.data("category") === i &&
                      e.data("value").toString() === t.val().toString() &&
                      e.remove();
                  })),
            filter.update(),
            a.removeClass("filter");
        });
    },
    checkExtrasState: function () {
      var t = [],
        a = { data: [] };
      $(".css-checkbox.extras").each(function () {
        var e = $(this);
        e.is(":checked")
          ? (null === storage.get("extras-tooltip") &&
              (storage.save("extras-tooltip", "show"),
              $(".session-tooltip").removeClass("d-none")),
            t.push(e.attr("name")),
            a.data.push(e.data("id")))
          : -1 !== (e = a.data.indexOf(e.data("id"))) && a.splice(e, 1);
      }),
        0 === t.length
          ? filter.updateCardPrice([], [])
          : filter.updateCardPrice(t, a);
    },
    updateCardPrice: function (s, e) {
      $(".car-box").each(function () {
        let t = $(this),
          a = $(this).data("price"),
          e = "",
          o = "",
          i,
          n = 0,
          r = "";
        "" !== t.data("promo") &&
          ((n = a + (a * t.data("promo")) / 100),
          (e = sprintf(_d.s.currencyMask, n.toFixed(2), _d.s.currencySign))),
          (i =
            0 < s.length
              ? (s.forEach((e) => {
                  e = t.data(e + "-price");
                  (a += e), (n += e);
                }),
                (o = sprintf(
                  _d.s.currencyMask,
                  n.toFixed(2),
                  _d.s.currencySign
                )),
                (r = sprintf(
                  _d.s.currencyMask,
                  a.toFixed(2),
                  _d.s.currencySign
                )),
                a.toFixed(2))
              : ((r = t.data("price-formatted")), (o = e), t.data("price"))),
          t.find(".car-box-money .price").text(r),
          "" !== e && t.find(".car-box-money .old-price").text(o),
          t.attr("data-total-price", i);
      });
      let t = $(".sort-by-list.active").data("type"),
        a = $("#car-box-container");
      sp.orderBy(t, a, !1),
        $.postJSON(_d.url.search.extras, { guid: a.data("guid"), data: e });
    },
    action: function () {
      $("#extras-tooltip").on("click", function (e) {
        e.preventDefault(), $(".session-tooltip").addClass("d-none");
      }),
        $(".css-checkbox.extras").change(function () {
          filter.checkExtrasState();
        }),
        $("#show-offers-btn").on("click", function (e) {
          e.preventDefault(), $("#searchFilterModal").modal("hide");
        }),
        $(".top-filter-item").on("click", function () {
          var e = $(this),
            a = e.data("shortcut");
          if (
            e.hasClass("loading") ||
            e.hasClass("disabled") ||
            e.hasClass("disabled")
          )
            return !1;
          $(".top-filter-item").addClass("inactive"),
            e.addClass("loading"),
            (filter.topFilterElement = e),
            setTimeout(function () {
              var e = $('input[data-shortcut="' + a + '"]'),
                t = e.parent();
              (t.hasClass("multiple")
                ? t.addClass("opened").parent().show()
                : t.addClass("opened")
              )
                .prev()
                .addClass("opened"),
                e.trigger("click");
            }, 200);
        }),
        $("#filter-button-reset").on("click", function (e) {
          e.preventDefault(),
            (filter.filteredCategories = []),
            filter.paging
              ? ($(".car-box")
                  .removeClass("filtered-out")
                  .addClass("filtered no-show"),
                $(".car-box.filtered:lt(" + filter.limit + ")").removeClass(
                  "no-show"
                ),
                $(".show-more-cars").show())
              : $(".car-box").removeClass("filtered-out").addClass("filtered"),
            $(".remove-filter").remove(),
            $(".clear-filter-group").each(function () {
              $(this).removeClass("active");
            }),
            $("#search-filter")[0].reset(),
            filter.filterText(!0),
            filter.carGroupsUncheck("all"),
            filter.saveInStorage();
        }),
        $("body").on("click", ".car-groups-item", function () {
          var e = $(this);
          if (e.hasClass("disabled") || e.hasClass("selected")) return !1;
          $(".car-groups-item").removeClass("init"),
            e.addClass("selected"),
            $("#" + e.data("id")).trigger("click");
        });
    },
    closeFilter: function () {
      $("#searchFilterModal").modal("hide");
    },
    getSelectors: function () {
      var o = [];
      return (
        $(".clear-filter-group").removeClass("active"),
        $(".flt-group").each(function () {
          var t,
            e = $(this),
            a = $("input:checked", e);
          0 < a.length &&
            ((t = ""),
            a.each(function (e) {
              0 < e && (t += ","),
                (t +=
                  "[data-" +
                  $(this).attr("name") +
                  '="' +
                  $(this).val() +
                  '"]');
            }),
            o.push(t),
            (e.hasClass("multiple") ? e.parent() : e)
              .prev()
              .find(".clear-filter-group")
              .addClass("active"));
        }),
        o
      );
    },
    update: function () {
      var e = $(".car-box"),
        t = filter.getSelectors(),
        t = filter.filterResults(e, t);
      e.addClass("filtered-out").removeClass("filtered"),
        filter.paging
          ? ((e = $(".show-more-cars")),
            t.removeClass("filtered-out").addClass("filtered no-show"),
            $(".car-box.filtered:lt(" + filter.limit + ")").removeClass(
              "no-show"
            ),
            $(".car-box.filtered").length > filter.limit ? e.show() : e.hide())
          : t.removeClass("filtered-out").addClass("filtered"),
        filter.filterText(!0),
        filter.saveInStorage(),
        filter.topFilterElement &&
          $(".top-filter-item").removeClass("inactive loading");
      try {
        sp.resetCurrentImpressionViews();
        var a = sp.countDisplayedCars();
        let e = sp.splitIntoBatches(a);
        sp.updateCurrentImpressionViews(a),
          e.forEach(function (e) {
            myDataLayer.sendImpressionEvent(
              sp.getProductBatch(e),
              "impressionFilter"
            );
          });
      } catch (e) {}
    },
    filterResults: function (e, t) {
      for (var a in t)
        Object.prototype.hasOwnProperty.call(t, a) && (e = e.filter(t[a]));
      return e;
    },
    activeFilters: function () {
      var o = [],
        a = [],
        i = [],
        n = [],
        r = [],
        s = [],
        l = [],
        c = [],
        d = [],
        p = [],
        u = [],
        f = [],
        h = [],
        m = [],
        g = [],
        v = [],
        b = [],
        y = [],
        k = [],
        e = filter.filteredCategories[0];
      $(".filtered").each(function () {
        var e = $(this).data();
        $.each(e, function (e, t) {
          "carGroupsSmall" === e && -1 === o.indexOf(t) && o.push(t),
            "carGroupsMedium" === e && -1 === o.indexOf(t) && o.push(t),
            "carGroupsLarge" === e && -1 === o.indexOf(t) && o.push(t),
            "carGroupsSuv" === e && -1 === o.indexOf(t) && o.push(t),
            "carGroupsEstate" === e && -1 === o.indexOf(t) && o.push(t),
            "carGroupsConvertibles" === e && -1 === o.indexOf(t) && o.push(t),
            "carGroupsVans" === e && -1 === o.indexOf(t) && o.push(t),
            "carGroupsPremium" === e && -1 === o.indexOf(t) && o.push(t),
            "transmissionType" === e && -1 === f.indexOf(t) && f.push(t),
            "airConditioning" === e && -1 === u.indexOf(t) && u.push(t),
            "fuelType" === e && -1 === h.indexOf(t) && h.push(t),
            "doors" === e && -1 === m.indexOf(t) && m.push(t),
            "wheelDrive" === e && -1 === g.indexOf(t) && g.push(t),
            "supplier" === e && -1 === c.indexOf(t) && c.push(t),
            "mapLocations" === e && -1 === v.indexOf(t) && v.push(t),
            ("ratingExceptional" !== e &&
              "ratingExcellent" !== e &&
              "ratingVeryGood" !== e &&
              "ratingGood" !== e &&
              "ratingAcceptable" !== e) ||
              (-1 === s.indexOf(t) && s.push(t)),
            ("extra2" !== e &&
              "extra3" !== e &&
              "extra4" !== e &&
              "extra5" !== e &&
              "extra6" !== e &&
              "extra10" !== e) ||
              (-1 === i.indexOf(t) && i.push(t)),
            ("pickupDebit" !== e && "pickupCredit" !== e) ||
              (-1 === l.indexOf(t) && l.push(t)),
            "location" === e && -1 === n.indexOf(t) && n.push(t),
            "locationType" === e && -1 === r.indexOf(t) && r.push(t),
            "fuelPolicy" === e && -1 === a.indexOf(t) && a.push(t),
            "numberOfSeats" === e && -1 === b.indexOf(t) && b.push(t),
            ("depositGroup-3" !== e &&
              "depositGroup-2" !== e &&
              "depositGroup-1" !== e &&
              "depositGroup-0" !== e) ||
              (-1 === y.indexOf(t) && y.push(t)),
            "paymentType" === e && -1 === k.indexOf(t) && k.push(t),
            "mileage" === e && -1 === d.indexOf(t) && d.push(t),
            "isExact" === e && -1 === p.indexOf(t) && p.push(t),
            "instantConfirmation" === e && -1 === p.indexOf(t) && p.push(t),
            "gps" === e && -1 === p.indexOf(t) && p.push(t),
            "additionalDriver" === e && -1 === p.indexOf(t) && p.push(t),
            "zeroDeposit" === e && -1 === p.indexOf(t) && p.push(t),
            "onlineCheckIn" === e && -1 === p.indexOf(t) && p.push(t),
            "zeroEmission" === e && -1 === p.indexOf(t) && p.push(t),
            "winterTires" === e && -1 === p.indexOf(t) && p.push(t),
            "discoverChoice" === e && -1 === p.indexOf(t) && p.push(t);
        });
      }),
        $(".filtering-event").removeClass("disabled"),
        $(".flt-group input").each(function () {
          var e = $(this),
            t = e.data("category");
          -1 === filter.filteredCategories.indexOf(t) && e.prop("disabled", !0);
        }),
        void 0 !== e &&
          $(".filter-" + e).each(function () {
            $(this).prev().prop("disabled", !1);
          }),
        0 < o.length &&
          -1 === filter.filteredCategories.indexOf("car-groups") &&
          $(".filter-car-groups").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev(),
              a = t.attr("id");
            -1 === o.indexOf(e)
              ? (t.prop("disabled", !0),
                $(".car-groups-item[data-id=" + a + "]").addClass("disabled"))
              : (t.prop("disabled", !1),
                $(".car-groups-item[data-id=" + a + "]").removeClass(
                  "disabled"
                ));
          }),
        0 < u.length &&
          -1 === filter.filteredCategories.indexOf("air-conditioning") &&
          $(".filter-air-conditioning").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === u.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < f.length &&
          -1 === filter.filteredCategories.indexOf("transmission-type") &&
          $(".filter-transmission-type").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === f.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < h.length &&
          -1 === filter.filteredCategories.indexOf("fuel-type") &&
          $(".filter-fuel-type").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === h.indexOf(e)
              ? (t.prop("disabled", !0),
                filter.toggleStateTopFilter(t, "disabled"))
              : (t.prop("disabled", !1),
                filter.toggleStateTopFilter(t, "enabled"));
          }),
        0 < m.length &&
          -1 === filter.filteredCategories.indexOf("doors") &&
          $(".filter-doors").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === m.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < g.length &&
          -1 === filter.filteredCategories.indexOf("wheel-drive") &&
          $(".filter-wheel-drive").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === g.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < c.length &&
          -1 === filter.filteredCategories.indexOf("supplier") &&
          $(".filter-supplier").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === c.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < l.length &&
          -1 === filter.filteredCategories.indexOf("payment-at-pickup") &&
          $(".filter-payment-at-pickup").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === l.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < i.length &&
          $(".filter-extras").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === i.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < s.length &&
          -1 === filter.filteredCategories.indexOf("rating") &&
          $(".filter-rating").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === s.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < n.length &&
          -1 === filter.filteredCategories.indexOf("location") &&
          $(".filter-location").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === n.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < r.length &&
          -1 === filter.filteredCategories.indexOf("location-type") &&
          $(".filter-location-type").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === r.indexOf(e)
              ? (t.prop("disabled", !0),
                filter.toggleStateTopFilter(t, "disabled"))
              : (t.prop("disabled", !1),
                filter.toggleStateTopFilter(t, "enabled"));
          }),
        0 < a.length &&
          -1 === filter.filteredCategories.indexOf("fuel-policy") &&
          $(".filter-fuel-policy").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === a.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < v.length &&
          -1 === filter.filteredCategories.indexOf("map-locations") &&
          $(".filter-map-locations").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === v.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < b.length &&
          -1 === filter.filteredCategories.indexOf("number-of-seats") &&
          $(".filter-number-of-seats").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === b.indexOf(e)
              ? (t.prop("disabled", !0),
                filter.toggleStateTopFilter(t, "disabled"))
              : (t.prop("disabled", !1),
                filter.toggleStateTopFilter(t, "enabled"));
          }),
        0 < y.length &&
          -1 === filter.filteredCategories.indexOf("deposit") &&
          $(".filter-deposit").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === y.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          }),
        0 < d.length &&
          -1 === filter.filteredCategories.indexOf("mileage") &&
          $(".filter-mileage").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === d.indexOf(e)
              ? (t.prop("disabled", !0),
                filter.toggleStateTopFilter(t, "disabled"))
              : (t.prop("disabled", !1),
                filter.toggleStateTopFilter(t, "enabled"));
          }),
        0 < p.length &&
          $(".filter-special-offers").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === p.indexOf(e)
              ? (t.prop("disabled", !0),
                filter.toggleStateTopFilter(t, "disabled"))
              : (t.prop("disabled", !1),
                filter.toggleStateTopFilter(t, "enabled"));
          }),
        0 < k.length &&
          -1 === filter.filteredCategories.indexOf("payment-type") &&
          $(".filter-payment-type").each(function () {
            var e = $(this).data("value"),
              t = $(this).prev();
            -1 === k.indexOf(e)
              ? t.prop("disabled", !0)
              : t.prop("disabled", !1);
          });
    },
    toggleStateTopFilter: function (e, t) {
      e = void 0 !== e.attr("data-shortcut") && e.attr("data-shortcut");
      "disabled" === t
        ? $('.top-filter-item[data-shortcut="' + e + '"]').addClass("disabled")
        : $('.top-filter-item[data-shortcut="' + e + '"]').removeClass(
            "disabled"
          );
    },
    filterText: function (e) {
      var t = $(".car-box"),
        a = $(".no-cars-available"),
        o = $(".other-cars"),
        i = $(".fc-box"),
        n = t.length,
        r = $(".showing-cars-block"),
        t = n - $(".car-box.filtered-out").length;
      $(".showing-cars").text(t),
        $(".total-cars").text(n),
        0 < $(".selected-car-box:visible").length ? o.show() : o.hide(),
        t !== n ? i.hide() : i.show();
      (n = $(".clear-all-filter")), (i = $(".flt-type input:checked").length);
      0 < i
        ? ($(".filter-count").html(i).addClass("active"), n.show())
        : ($(".filter-count").html("").removeClass("active"), n.hide()),
        0 == t
          ? (a.removeClass("hide"),
            r.addClass("zero"),
            $("html, body").stop().animate({ scrollTop: 0 }, 500))
          : (a.addClass("hide"), r.removeClass("zero")),
        t < 3 &&
          "static-locations" !== _d.page &&
          $("html, body").stop().animate({ scrollTop: 0 }, 500),
        $(window).scroll(),
        $(".filter").removeClass("filter"),
        e && filter.activeFilters();
    },
    resetFilter: function () {
      $("body").on("click", ".clear-filter-group", function (e) {
        e.stopPropagation(), e.preventDefault();
        var e = $(this).data("category"),
          t = -1;
        if (0 < e.indexOf(",")) {
          var a,
            o = e.split(",");
          for (a in o)
            Object.prototype.hasOwnProperty.call(o, a) &&
              (-1 !== (t = filter.filteredCategories.indexOf(o[a])) &&
                filter.filteredCategories.splice(t, 1),
              $(".remove-filter[data-category=" + o[a] + "]").remove());
        } else -1 !== (t = filter.filteredCategories.indexOf(e)) && filter.filteredCategories.splice(t, 1), $(".remove-filter[data-category=" + e + "]").remove();
        filter.removeAllFilters(),
          $(this)
            .parents(".flt-head")
            .removeClass("selected")
            .next()
            .find("input")
            .prop({ checked: !1, disabled: !1 }),
          filter.update();
      });
    },
    toggle: function () {
      $(document)
        .on("click", ".open-filters", function (e) {
          e.preventDefault(),
            0 === $(".map-locations:checked").length &&
              $(".map-filter").addClass("hide"),
            $("#searchFilterModal").modal("show");
        })
        .on("click", ".flt-head", function () {
          $(this).toggleClass("opened").next().slideToggle(100);
        });
    },
    backToTop: function () {
      var e = $("#return-to-top");
      $(window).scroll(function () {
        4e3 < $(this).scrollTop()
          ? e.addClass("cd-is-visible")
          : e.removeClass("cd-is-visible cd-fade-out"),
          2e3 < $(this).scrollTop() && e.addClass("cd-fade-out");
      }),
        e.click(function (e) {
          e.preventDefault(), $("body,html").animate({ scrollTop: 0 }, 500);
        });
    },
    filtersApplied: function () {
      $(".filter-list").on("click", ".remove-filter", function (e) {
        e.preventDefault();
        var t = $(this),
          a = t.data("category"),
          e = t.data("value");
        $("input[data-category=" + a + "][value=" + e + "]")
          .prop("checked", !1)
          .change(),
          $(".car-groups-item[data-id=car-groups-" + e + "]").removeClass(
            "selected triggered"
          ),
          filter.carGroupsUncheck("item"),
          t.remove();
      }),
        $(".clear-all-filter").on("click", function (e) {
          e.preventDefault(),
            $("#filter-button-reset").click(),
            filter.carGroupsUncheck("all");
        });
    },
    carGroupsUncheck: function (e) {
      var t = $(".car-groups-item");
      "all" === e
        ? t.removeClass("selected triggered").addClass("init")
        : t.hasClass("selected") || t.addClass("init"),
        $(".top-filter-item").removeClass("active");
    },
    saveInStorage: function () {
      storage.save(
        "filterM_" + searchHash,
        $("#search-filter").serializeArray()
      );
    },
    showMore: function () {
      0 === $(".car-box.no-show").length && $(".show-more-cars").hide(),
        $("body").on("click", ".show-more-cars", function (e) {
          e.preventDefault();
          e = $(this);
          if (e.hasClass("loading")) return !1;
          e.addClass("loading"),
            0 === $(".car-box.filtered").length
              ? ($(".car-box.no-show:lt(" + filter.limit + ")").removeClass(
                  "no-show"
                ),
                0 === $(".car-box.no-show").length && e.hide())
              : ($(
                  ".car-box.filtered.no-show:lt(" + filter.limit + ")"
                ).removeClass("no-show"),
                0 === $(".car-box.filtered.no-show").length && e.hide());
          try {
            var t = sp.countDisplayedCars();
            let e = sp.splitIntoBatches(t);
            sp.updateCurrentImpressionViews(t),
              e.forEach(function (e) {
                e = sp.getProductBatch(e);
                e.length &&
                  (filter.filteredCategories.length
                    ? myDataLayer.sendImpressionEvent(e, "impressionFilter")
                    : myDataLayer.sendImpressionEvent(e, "impressionView"));
              });
          } catch (e) {}
          e.removeClass("loading").blur();
        });
    },
  },
  storage = {
    save: function (e, t) {
      "undefined" != typeof Storage &&
        localStorage.setItem(e, JSON.stringify(t));
    },
    get: function (e) {
      if ("undefined" != typeof Storage)
        try {
          var t = localStorage.getItem(e);
          return JSON.parse(t);
        } catch (e) {
          return "";
        }
    },
    delete: function (e) {
      if ("undefined" != typeof Storage)
        try {
          localStorage.removeItem(e);
        } catch (e) {
          return "";
        }
    },
  },
  carTabs = {
    init: function () {
      $("body")
        .on("click", ".tab", function () {
          var e = $(this),
            t = e.parents(".car-box"),
            a = e.data("section");
          if (e.hasClass("disabled")) return !1;
          t.find(".tab").removeClass("active"),
            e.addClass("active"),
            t.find(".tab-content").removeClass("active"),
            $("#" + a).addClass("active");
        })
        .on("click", ".location-instructions", function () {
          var e = $(this);
          e.toggleClass("closed"), e.next().toggleClass("show");
        }),
        0 < $(".extend-block").length && carTabs.expandInstructions();
    },
    expandInstructions: function () {
      $(".toggle-instructions").on("click", function (e) {
        e.preventDefault();
        var t = $(this),
          a = t.data("more-text"),
          o = t.data("less-text"),
          e = t.data("mode");
        $("[data-" + e + "-hide], [data-" + e + "-show]").toggle(),
          t.text(t.hasClass("less") ? a : o).toggleClass("less");
      });
    },
  },
  thumbRating = {
    init: function () {
      thumbRating.action(), thumbRating.validate();
    },
    btn: "",
    box: "",
    action: function () {
      $("body").on("click", ".thumb-rating-action", function () {
        const e = $(this);
        (thumbRating.box = e.parents(".thumb-rating-box")),
          e.hasClass("up")
            ? thumbRating.request("up")
            : (myModal.openStaticModal("thumbRatingImproveModal"),
              $("#thumb-rating-comment").val("").removeClass("error"));
      }),
        $("#thumbRatingImproveModal").on("hidden.bs.modal", function () {
          $("#thumb-rating-btn").prop("disabled", !1);
        });
    },
    validate: function () {
      $("#thumb-rating-btn").on("click", function () {
        const e = $(this),
          t = $("#thumb-rating-comment");
        var a = t.val();
        e.addClass("loading"),
          0 < a.length
            ? (e.prop("disabled", !0),
              t.removeClass("error"),
              thumbRating.request("down"))
            : (t.addClass("error"),
              setTimeout(function () {
                e.removeClass("loading");
              }, 0));
      }),
        $("#thumb-rating-comment").on("keyup", function () {
          const e = $(this);
          0 < e.val().length && e.removeClass("error");
        });
    },
    request: function (e) {
      let t = [];
      (t.mode = "down" === e ? 0 : 1),
        "down" === e && (t.comment = $("#thumb-rating-comment").val());
      var a,
        o = thumbRating.box.data("json"),
        i = thumbRating.box.data("url");
      for (a in o) Object.prototype.hasOwnProperty.call(o, a) && (t[a] = o[a]);
      "down" === e
        ? setTimeout(function () {
            thumbRating.showMessage(e);
          }, 700)
        : thumbRating.showMessage(e),
        $.postJSON(i, t);
    },
    showMessage: function (e) {
      let t = thumbRating.box.next(".thumb-rating-message");
      var a = t.data(e);
      "down" === e && myModal.close("thumbRatingImproveModal"),
        thumbRating.box.hide(),
        t.text(a).fadeIn();
    },
  },
  sp = {
    impressionViewDefaultBatch: 25,
    currentImpressionViews: 0,
    dataSnapshot: {},
    renderedProductBatch: [],
    init: function () {
      sp.search.init(),
        sp.shuffle(),
        sp.sortBy(),
        $("body").on("click", ".fc-heading", function () {
          $(".fc-full").slideToggle(), $(".fc-box").toggleClass("opened");
        });
    },
    shuffle: function () {
      var e = $(".suppliers-logo").length;
      const t = Array.from(Array(e).keys());
      let a = t.length,
        o,
        i;
      for (; 0 !== a; )
        (i = Math.floor(Math.random() * a)),
          --a,
          (o = t[a]),
          (t[a] = t[i]),
          (t[i] = o);
      const n = [];
      t.forEach(function () {
        var e = Math.floor(1201 * Math.random()) + 500;
        n.push(e);
      });
      let r = 0;
      t.forEach(function () {
        sp.supplierLogoIsReady(r, t, n), r++;
      });
    },
    supplierLogoIsReady: function (e, t, a) {
      setTimeout(function () {
        $("#logo-" + t[e]).addClass("supplier-logo-ready");
      }, e * a[e]);
    },
    search: {
      limit: 40,
      paging: !0,
      conf: {
        url:
          _d.url.search.result +
          "/" +
          ("undefined" != typeof search_GUID ? search_GUID : ""),
        target: $(".search-result-set"),
        filter: $("#search-filter-body"),
        tpl_search: $("#tpl-search").text(),
        tpl_filter: $("#tpl-filter").text(),
      },
      init: function () {
        var e, t, a, o;
        !1 !== listData
          ? sp.search.parseData(listData)
          : ((t = {}),
            (a = ""),
            (o =
              void 0 !== (e = urlParser.init()).get &&
              void 0 !== e.get.refSearchGUID &&
              void 0 !== e.get.carId),
            ("undefined" != typeof fakeRedirect && fakeRedirect) || o
              ? (void 0 !== e.get &&
                  (void 0 !== e.get.ep && (t.ep = e.get.ep),
                  void 0 !== e.get.exc_p && (t.exc_p = e.get.exc_p),
                  void 0 !== e.get.exc_l && (t.exc_l = e.get.exc_l)),
                "undefined" != typeof isModification &&
                  isModification &&
                  (t.mod = 1),
                $.isEmptyObject(t) || (a = "?" + $.param(t)),
                (sp.search.conf.url = _d.url.search.resultForAggregator + a))
              : (void 0 !== e.get &&
                  (void 0 !== e.get.exc_p && (t.exc_p = e.get.exc_p),
                  void 0 !== e.get.exc_l && (t.exc_l = e.get.exc_l)),
                $.isEmptyObject(t) ||
                  ((a = "?" + $.param(t)),
                  (sp.search.conf.url = sp.search.conf.url + a))),
            sp.search.request());
      },
      request: function () {
        $.ajax({
          url: sp.search.conf.url,
          type: "GET",
          dataType: "json",
          success: sp.search.parseData,
          error: function () {
            sp.noResults();
          },
        });
      },
      parseData: function (u) {
        if (
          ((sp.dataSnapshot = u),
          $(".logo-search-parent").remove(),
          $(".search-result-set, .pick-drop-info").removeClass("hide"),
          0 < u.cnt)
        ) {
          var e;
          if ("undefined" != typeof fakeRedirect && fakeRedirect) {
            for (var t = 0; t < u.list.length; t++)
              if (
                "undefined" != typeof selectedCar &&
                selectedCar.carInfoHash === u.list[t].carInfoHash
              ) {
                (u.list[t].selected = !0), (e = u.list[t]), u.list.splice(t, 1);
                break;
              }
          } else if ("undefined" != typeof viewedCars)
            for (var a = 0; a < u.list.length; a++)
              for (var o = 0; o < viewedCars.length; o++)
                viewedCars[o].carInfoHash === u.list[a].carInfoHash &&
                  ((u.list[a].viewed = !0),
                  viewedCars.length - 1 === o && (u.list[a].lastviewed = !0));
          if ((void 0 !== e && u.list.unshift(e), sp.search.paging))
            for (var i = 0; i < u.list.length; i++)
              i >= sp.search.limit && (u.list[i].noShow = !0);
          sp.search.conf.target
            .html(Mustache.render(sp.search.conf.tpl_search, u))
            .addClass("data-loaded"),
            sp.search.conf.filter.html(
              Mustache.render(sp.search.conf.tpl_filter, u)
            ),
            $("#filter-circle, #open-hirepoints").addClass("active"),
            sfr.init(),
            filter.init(),
            tooltip.init();
          var n = $("#tpl-promo");
          0 < n.length &&
            $(".notifications-wrapper").prepend(Mustache.render(n.text())),
            fcBanner &&
              $(".car-box:first").after(
                Mustache.render($("#tpl-fc").text(), u)
              ),
            setTimeout(function () {
              timeApprove.init();
            }, 3e3),
            $("#open-hirepoints").on("click", function (e) {
              e.preventDefault(),
                $(".trigger-map-location").removeClass("loading");
              for (
                var i = u.filter.mapLocations, r = [], t = 0;
                t < i.length;
                t++
              )
                (u.filter.mapLocations[t].cars_available = []),
                  (u.filter.mapLocations[t].logo = []),
                  (u.filter.mapLocations[t].display = 0),
                  (u.filter.mapLocations[t].count_cars = 0),
                  (u.filter.mapLocations[t].min_price = 0),
                  (u.filter.mapLocations[t].previous_price = 0);
              function a(e, t) {
                for (var a, o = 0; o < i.length; o++)
                  i[o].key === $(t).data("map-locations") &&
                    (u.filter.mapLocations[o].cars_available.push(
                      $(t).data("total-price")
                    ),
                    (u.filter.mapLocations[o].count_cars =
                      u.filter.mapLocations[o].count_cars + 1),
                    (u.filter.mapLocations[o].display = 1),
                    (a = $(t).find(".src-logo").data("src")),
                    -1 === u.filter.mapLocations[o].logo.indexOf(a) &&
                      u.filter.mapLocations[o].logo.push(a),
                    0 === u.filter.mapLocations[o].previous_price
                      ? ((u.filter.mapLocations[o].min_price =
                          $(t).data("total-price")),
                        (u.filter.mapLocations[o].previous_price =
                          $(t).data("total-price")),
                        (u.filter.mapLocations[o].price_formatted =
                          $(t).data("price-formatted")))
                      : parseFloat($(t).data("total-price")) <
                        u.filter.mapLocations[o].min_price
                      ? ((u.filter.mapLocations[o].min_price =
                          $(t).data("total-price")),
                        (u.filter.mapLocations[o].previous_price =
                          u.filter.mapLocations[o].min_price),
                        (u.filter.mapLocations[o].price_formatted =
                          $(t).data("price-formatted")))
                      : (u.filter.mapLocations[o].previous_price =
                          $(t).data("total-price")));
              }
              0 !== $("#car-box-container").find(".filtered").length
                ? $(".filtered").each(function (e, t) {
                    a(0, t);
                  })
                : $(".car-box").each(function (e, t) {
                    a(0, t);
                  });
              for (var o = 0; o < i.length; o++)
                1 === i[o].display &&
                  "0_0000_0_0000" !== i[o].key &&
                  r.push(u.filter.mapLocations[o]);
              var n = [],
                s = [],
                l = [],
                c = [],
                d = [];
              $.each(r, function (t) {
                var a = [];
                n.push([r[t].lat, r[t].lng]),
                  s.push(r[t].price_formatted),
                  $.each(r[t].logo, function (e) {
                    a.push(
                      '<img class="leaflet-popup-supplier-logo" src="' +
                        r[t].logo[e] +
                        '">'
                    );
                  }),
                  l.push(a),
                  c.push(r[t].pick_address),
                  d.push(r[t].count_cars);
              });
              var p = {
                locations: n,
                arrayOfMarkers: [],
                init: function () {
                  $("#hirepoints-map-placeholder").append(
                    '<div id="hirepoints-map"><div id="close-hirepoints-map"><svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.3783L1.66376 11.7145C1.28315 12.0952 0.666063 12.0952 0.285455 11.7145C-0.0951518 11.3339 -0.0951518 10.7169 0.285455 10.3362L4.6217 6L0.285455 1.66376C-0.0951518 1.28315 -0.0951518 0.666063 0.285455 0.285455C0.666063 -0.0951518 1.28315 -0.0951518 1.66376 0.285455L6 4.6217L10.3362 0.285455C10.7169 -0.0951518 11.3339 -0.0951518 11.7145 0.285455C12.0952 0.666063 12.0952 1.28315 11.7145 1.66376L7.3783 6L11.7145 10.3362C12.0952 10.7169 12.0952 11.3339 11.7145 11.7145C11.3339 12.0952 10.7169 12.0952 10.3362 11.7145L6 7.3783Z" fill="#757575"></svg></div></div>'
                  ),
                    $("#hirepoints-map").is(":hidden")
                      ? $("#hirepoints-map").show()
                      : $("#hirepoints-map").css("z-index", "9999");
                  var e = L.map("hirepoints-map");
                  e.zoomControl.setPosition("bottomright"),
                    L.tileLayer(
                      "https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png",
                      {
                        attribution:
                          '&copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions" target="_blank">CARTO</a>',
                      }
                    ).addTo(e),
                    e.invalidateSize(),
                    p.setMarkers(e, p.locations),
                    p.setZoom(e, p.locations);
                },
                setMarkers: function (e, t) {
                  for (
                    var a = L.markerClusterGroup(), o = 0;
                    o < t.length;
                    o++
                  ) {
                    var i = r[o].defaultName,
                      n = s[o].length;
                    a.addLayer(
                      L.marker([t[o][0], t[o][1]], {
                        icon: L.icon({
                          className:
                            t[o][0].replace(".", "_") +
                            "_" +
                            t[o][1].replace(".", "_"),
                          iconUrl:
                            _d.url.bh +
                            "/image/get-discover-markers/" +
                            s[o] +
                            "/" +
                            i +
                            "/" +
                            n,
                        }),
                      })
                    ),
                      e.addLayer(a),
                      p.arrayOfMarkers.push([t[o][0], t[o][1]]);
                  }
                },
                setZoom: function (e) {
                  var t = new L.LatLngBounds(p.arrayOfMarkers);
                  e.fitBounds(t.pad(0.05));
                },
              };
              $("#hirepoints-map").remove(),
                p.init(),
                $("#close-hirepoints-map").on("click", function (e) {
                  e.preventDefault(),
                    $(".leaflet-popup-content").addClass("hide"),
                    $("#hirepoints-map").hide();
                }),
                $("body").one("click", ".trigger-map-location", function () {
                  var e = $(this).attr("data-key");
                  $(".map-filter, .leaflet-popup-content").addClass("hide"),
                    $(".remove-all-filters, #hirepoints-map").hide(),
                    $(".trigger-map-location").addClass("loading"),
                    $(
                      '.filter-map-locations[data-value="' +
                        $(this).attr("data-key") +
                        '"]'
                    ).trigger("click"),
                    $("#map-loc-" + e).removeClass("hide");
                }),
                $("body").on("click", ".leaflet-marker-icon", function (e) {
                  e.preventDefault(),
                    $(".leaflet-marker-icon").removeClass("marker-clicked"),
                    $(this).addClass("marker-clicked");
                  var a = $(this).attr("class").split(" ");
                  $.each(r, function (t) {
                    r[t].key === a[1] &&
                      ($(".leaflet-popup-content").removeClass("hide"),
                      $(".trigger-map-location").attr("data-key", r[t].key),
                      $("#map-popup-from").text(r[t].price_formatted),
                      $(".showing-cars").text(r[t].count_cars),
                      $("#map-popup-addr").text(r[t].pick_address),
                      $("#map-popup-logo").empty(),
                      $.each(r[t].logo, function (e) {
                        $("#map-popup-logo").append(
                          '<img src="' +
                            r[t].logo[e] +
                            '" class="leaflet-popup-supplier-logo">'
                        );
                      }));
                  });
                }),
                $("body").on("click", "#close_mob_popup", function (e) {
                  e.preventDefault(),
                    $(".leaflet-marker-icon").removeClass("marker-clicked"),
                    $(".leaflet-popup-content").addClass("hide");
                });
            });
          var r = storage.get("filterM_" + searchHash);
          if (r) {
            for (var s = [], l = 0; l < localStorage.length; l++)
              "filterM_" === localStorage.key(l).substring(0, 8) &&
                s.push(localStorage.key(l));
            for (var c, d = 0; d < s.length; d++) localStorage.removeItem(s[d]);
            for (c in (storage.save("filterM_" + searchHash, r), r))
              Object.prototype.hasOwnProperty.call(r, c) &&
                $(".css-checkbox", "#search-filter").each(function () {
                  var e = $(this),
                    t = e.attr("name"),
                    a = e.val();
                  r[c].name === t &&
                    r[c].value === a &&
                    e.next().trigger("click");
                });
          }
          0 < $(".car-box.viewed").length &&
            ((p =
              0 < $(".car-box.last-viewed").length
                ? $(".car-box.last-viewed")
                : $(".car-box.viewed:last")),
            $("html, body").animate({ scrollTop: p.offset().top }, 800));
          var p,
            n = $(".other-cars");
          0 < n.length &&
            ((p = n.html()),
            n.html(p.replace("#car_count#", u.cnt - 1)),
            1 === $(".car-box:visible").length && n.hide()),
            new LazyLoad(),
            dataLayer.push({
              event: "searchResults",
              searchResults: {
                carCount: u.cnt,
                partnerCount: u.filter.supplier.length,
              },
              search_data: {
                title: "Search Results",
                page: "/search-result?" + gaQuery,
                data: gaEvent,
              },
            });
          try {
            var f = sp.countDisplayedCars();
            let e = sp.splitIntoBatches(f);
            sp.updateCurrentImpressionViews(f),
              e.forEach(function (e) {
                e = sp.getProductBatch(e);
                e.length &&
                  myDataLayer.sendImpressionEvent(e, "impressionView");
              });
          } catch (e) {}
        } else sp.noResults();
      },
    },
    countDisplayedCars: function () {
      sp.resetRenderedProductBatch();
      let t = 0;
      return (
        $(".car-box").each(function () {
          const e = $(this);
          e.is(":visible") &&
            (sp.renderedProductBatch.push({
              supplier: e.data("supplier"),
              c_id: e.data("car-id").toString(),
            }),
            t++);
        }),
        t
      );
    },
    resetRenderedProductBatch: function () {
      sp.renderedProductBatch = [];
    },
    resetCurrentImpressionViews: function () {
      sp.currentImpressionViews = 0;
    },
    updateCurrentImpressionViews: function (e) {
      sp.currentImpressionViews = e;
    },
    splitIntoBatches: function (t) {
      let a = [];
      for (
        let e = sp.currentImpressionViews;
        e <= t;
        e += sp.impressionViewDefaultBatch
      ) {
        var o = e,
          i = Math.min(e + sp.impressionViewDefaultBatch, t);
        a.push([o, i]);
      }
      return a;
    },
    getProductBatch: function (t) {
      let a = [];
      for (let e = t[0]; e < t[1]; e++) {
        let t = sp.renderedProductBatch[e];
        var o = sp.dataSnapshot.list.find(
            (e) => e.supplier.key === t.supplier && e.c_id === t.c_id
          ),
          o = {
            id: o.sipp,
            name: o.name,
            brand: o.supplier.name,
            category: myDataLayer.category,
            variant: "",
            list: "Search results",
            position: o.idx,
          };
        a.push(o);
      }
      return a;
    },
    noResults: function () {
      $(".logo-search-parent").remove(),
        $("#load-data-no-result").show(),
        (document.title = _d.t.noCars),
        dataLayer.push({
          searchResults: { carCount: 0, partnerCount: 0 },
          event: "searchResults",
        });
    },
    sortBy: function () {
      dcUiDropDown.init(),
        $(document).on("click", ".sort-by-list", function (e) {
          var t = $(this),
            a = t.data("type"),
            o = $("#car-box-container");
          e.preventDefault(),
            o.addClass("loading"),
            $(".sort-by-list").removeClass("active"),
            t.addClass("active"),
            setTimeout(function () {
              sp.orderBy(a, o, !0);
            }, 200);
        });
    },
    orderBy: function (e, t, a) {
      switch (e) {
        case "value":
          t.find(".car-box")
            .sort(function (e, t) {
              return (
                t.getAttribute("data-selected") -
                  e.getAttribute("data-selected") ||
                e.getAttribute("data-sort-by-value") -
                  t.getAttribute("data-sort-by-value")
              );
            })
            .prependTo(t);
          break;
        case "rating":
          t.find(".car-box")
            .sort(function (e, t) {
              return (
                t.getAttribute("data-selected") -
                  e.getAttribute("data-selected") ||
                t.getAttribute("data-sort-by-rating") -
                  e.getAttribute("data-sort-by-rating")
              );
            })
            .prependTo(t);
          break;
        default:
          t.find(".car-box")
            .sort(function (e, t) {
              return (
                t.getAttribute("data-selected") -
                  e.getAttribute("data-selected") ||
                e.getAttribute("data-total-price") -
                  t.getAttribute("data-total-price")
              );
            })
            .prependTo(t);
      }
      a && filter.update(), t.removeClass("loading");
    },
  };
const searchingsInLandings = {
  MIN_OPTION_WIDTH: 54,
  MAX_CAR_COUNT: 50,
  INITIAL_CARS_COUNT: 10,
  SELECT_ARROW_WIDTH: 12,
  carBoxesElement: $(".car-box"),
  itemsCountField: $(".seo-search-showing-cars"),
  showMore: function () {
    var e = $("#seo-search-sort"),
      t = $("#show-more-cars");
    (window.landingSearchCarCount = searchingsInLandings.INITIAL_CARS_COUNT),
      searchingsInLandings.sortBy(e),
      searchingsInLandings.selectOptions(e),
      searchingsInLandings.onShowMoreClick(t),
      searchingsInLandings.trackFilterSelect(t),
      searchingsInLandings.updateCarFilteredCount();
  },
  trackFilterSelect: function (e) {
    $("#searchFilterModal").on("click", function () {
      0 < Number($(".filter-count").text())
        ? e.hide()
        : (e.show(),
          window.landingSearchCarCount ===
            searchingsInLandings.INITIAL_CARS_COUNT &&
            searchingsInLandings.updateCarFilteredCount(),
          searchingsInLandings.setShowingCarCount());
    });
  },
  updateCarFilteredCount: function () {
    searchingsInLandings.carBoxesElement.each(function (e) {
      e >= searchingsInLandings.INITIAL_CARS_COUNT &&
        $(this).addClass("filtered-out"),
        searchingsInLandings.setShowingCarCount();
    });
  },
  setShowingCarCount: function () {
    searchingsInLandings.itemsCountField.text(
      searchingsInLandings.carBoxesElement.not(".filtered-out").length
    );
  },
  sortBy: function (e) {
    e.on("mouseup keyup click", function (e) {
      let t = $(this),
        a = t.val(),
        o = $("#car-box-container");
      e.preventDefault(),
        o.addClass("loading"),
        $(".sort-by-list").removeClass("active"),
        t.addClass("active"),
        setTimeout(function () {
          sp.orderBy(a, o, !0);
        }, 200);
    });
  },
  onShowMoreClick: function (t) {
    t.on("click", () => {
      searchingsInLandings.carBoxesElement.each((e, t) =>
        $(t).removeClass("filtered-out")
      );
      var e = searchingsInLandings.carBoxesElement.length;
      searchingsInLandings.itemsCountField.text(e),
        t.hide(),
        (window.landingSearchCarCount = e);
    });
  },
  selectOptions: function (t) {
    const a = $(".seo-search-select");
    setInterval(() => {
      var e = t.find("option:checked").text();
      a.text() !== e &&
        (a.text(e),
        t.outerWidth(a.outerWidth() + searchingsInLandings.SELECT_ARROW_WIDTH));
    }, 200);
  },
};
var dcUiDropDown = {
  init: function () {
    $(document).on("click", ".dc-ui.dropdown-toggle", function (e) {
      e.preventDefault(),
        $(this).toggleClass("show"),
        $(".dc-ui.dropdown-menu").toggleClass("show");
    }),
      $(document).on("click", ".dc-ui.dropdown-item", function () {
        $(".dc-ui.dropdown-toggle").html($(this).text()), dcUiDropDown.close();
      }),
      $(document).on("click", function (e) {
        $(e.target).closest(".dc-ui.dropdown").length || dcUiDropDown.close();
      });
  },
  close: function () {
    $(".dc-ui.dropdown-toggle").removeClass("show"),
      $(".dc-ui.dropdown-menu").removeClass("show");
  },
};
const suppliers = {
  init: function () {
    let o = 10;
    const e = $(".top-suppliers-wh-list"),
      i = $(".top-suppliers-blocks"),
      t = $(".supplier-rating-chevrons"),
      a = ".suppliers-chevron-icon-up",
      n = ".suppliers-chevron-icon-down";
    $(".top-suppliers-list").hide(),
      e.find(".suppliers-wh" + a).toggle(),
      e.click(function () {
        $(this).find(".top-suppliers-list").slideToggle(),
          $(this)
            .find(
              ".suppliers-wh.suppliers-chevron-icon-down, .suppliers-wh.suppliers-chevron-icon-up"
            )
            .toggle();
      }),
      $(".top-suppliers-blocks, .partner-ratings.top-supplier-ratings").hide(),
      $(".partner-ratings.top-supplier-ratings").slice(0, 1).show(),
      t.find(a).toggle(),
      t.slice(0, 1).find(a).show(),
      t.slice(0, 1).find(n).hide(),
      $(".suppliers-toggle").click(function () {
        $(this).find(".partner-ratings.top-supplier-ratings").slideToggle(),
          $(this, ".supplier-rating-chevrons")
            .find(a + "," + n)
            .toggle();
      }),
      i.slice(0, o).toggle(),
      $("#suppliers-show-more").click(function (e) {
        var t = i.length;
        let a = o + 10;
        a >= t && ((a = t), $("#suppliers-show-more").hide());
        t = $("#suppliers-count-upper").text().replace(o, a);
        $("#suppliers-count-upper, #suppliers-count-lower").text(t),
          (o += 10),
          e.preventDefault(),
          i.slice(0, o).show();
      });
  },
};
var infographix = {
  init: function () {
    var e;
    0 < $(".graph-wrap").length &&
      ($(".infographix-tab a").on("click", function () {
        var e = $(this).data("section");
        $(".infographix-tab, .infographix-content").removeClass("active"),
          $("." + e).addClass("active");
      }),
      0 < window.location.hash.length &&
        ((e = window.location.hash.split("#")[1]), $("." + e + " a").click())),
      infographix.graphBarClick();
  },
  graphBarClick: function () {
    const a = $(".graph-wrap");
    a.on("click", function (e) {
      $(".graph-bar-value").hide(),
        a.find(".graph-bar-column").removeClass("gray-bar");
      const t = $(e.target);
      $(".infographix").on("click", function (e) {
        0 === $(e.target).closest(a).length &&
          ($(".graph-bar-value").hide(),
          a.find(".graph-bar-column").removeClass("gray-bar"));
      }),
        "graph-bar-column" === t.attr("class") &&
          (a.find(".graph-bar-column").addClass("gray-bar"),
          t.removeClass("gray-bar"),
          t.parent().parent().find(".graph-bar-value").show());
    });
  },
  openSection: function (e) {
    $("." + e + " a").click();
  },
};
const reviews = {
    DEFAULT_ELEMENT_INDEX: 0,
    init: function () {
      (_d.clickCount = 0),
        $("#review-learn-more").on("click", (e) => {
          $(".reviews-verified-reviews").removeClass("hide"),
            $(e.target).hide();
        }),
        $("#reviews-show-more").on("click", () => {
          reviews.clickShowMore();
          var { origin: e, pathname: t } = location;
          fetch("/client-reviews/get-more", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              clickCount: _d.clickCount,
              url: "" + e + t,
            }),
          })
            .then((e) => e.json())
            .then((e) => reviews.assignToContainer(e));
        });
    },
    clickShowMore: function () {
      _d.clickCount++;
    },
    assignToContainer: function (e) {
      $(".client-reviews-container").append(e);
      var t = $(".client-review").length,
        e = $(".review-count-total");
      $(".review-count").text(t),
        parseInt($(e[reviews.DEFAULT_ELEMENT_INDEX]).html()) === t &&
          $(".client-reviews-show-more").hide();
    },
  },
  factCheck = {
    init: function () {
      const e = $(".fact-check-read-more"),
        t = $(".chevron-icon-down"),
        a = $(".reviewed-by-icons");
      e.hide(),
        t.hide(),
        a.addClass("hide"),
        100 < $(".reviewed-by-content").text().length &&
          (e.show(),
          t.show(),
          e.click(function () {
            $(".reviewed-by-content").removeClass("description-3-lines"),
              e.hide(),
              t.hide(),
              a.removeClass("hide");
          }));
    },
  },
  mostPopularMap = {
    arrayOfMarkers: [],
    attributeData:
      '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
    baseMapCDN: "https://tile.openstreetmap.org/{z}/{x}/{y}.png",
    init: function () {
      const e = L.map("top-map", { gestureHandling: !1 }).setView([0, 0], 15);
      e.zoomControl.setPosition("bottomright"),
        e.addControl(new L.Control.Fullscreen().setPosition("topright")),
        L.tileLayer(this.baseMapCDN, { attribution: this.attributeData }).addTo(
          e
        ),
        mostPopularMap.setMarkers(e, mmLocations),
        mostPopularMap.setZoom(e),
        mostPopularMap.mapFullScreen();
    },
    setMarkers: function (n, e) {
      e.forEach((e) => {
        const {
          locationName: t,
          longitude: a,
          latitude: o,
          popupContent: i,
        } = e;
        e = L.icon.glyph({
          prefix: "",
          className: "marker",
          glyph: t,
          iconSize: [28, 34],
          iconAnchor: [10, 24],
          glyphAnchor: [0, -3],
          glyphSize: 14,
        });
        L.marker([o, a], { icon: e }).addTo(n).bindPopup(i.join("")),
          mostPopularMap.arrayOfMarkers.push([o, a]);
      });
    },
    setZoom: function (e) {
      const t = new L.LatLngBounds(mostPopularMap.arrayOfMarkers);
      1 < mostPopularMap.arrayOfMarkers.length
        ? e.fitBounds(t.pad(0.05))
        : (e.fitBounds(t.pad(0.05)), e.setZoom(10));
    },
    mapFullScreen() {
      $(".top-locations").on("click", function () {
        var e = document.webkitIsFullScreen;
        const t = $(document).scrollTop();
        if (e) {
          const a = $("#top-map").find(".open-pick-modal"),
            o = $(".pick-modal-close");
          a.on("click", () => {
            document.exitFullscreen();
          }),
            o.on("click.map", () => {
              $(window).scrollTop(t),
                document.getElementById("top-map").requestFullscreen();
            });
        }
      });
    },
  };
"undefined" != typeof searchInLandings && searchingInLandings.init(),
  $(function () {
    (jQuery.event.special.touchstart = {
      setup: function (e, t, a) {
        this.addEventListener("touchstart", a, {
          passive: !t.includes("noPreventDefault"),
        });
      },
    }),
      (jQuery.event.special.touchmove = {
        setup: function (e, t, a) {
          this.addEventListener("touchmove", a, {
            passive: !t.includes("noPreventDefault"),
          });
        },
      }),
      (jQuery.event.special.wheel = {
        setup: function (e, t, a) {
          this.addEventListener("wheel", a, { passive: !1, capture: !0 });
        },
      }),
      (jQuery.event.special.mousewheel = {
        setup: function (e, t, a) {
          this.addEventListener("mousewheel", a, { passive: !1, capture: !0 });
        },
      }),
      $(document).ajaxError(function (e, t) {
        418 === t.status && (document.location = _d.recaptcha);
      }),
      jQuery.ajax({
        url: "/portal/click",
        data: _d.dchToken,
        success: function () {
          return !0;
        },
        async: !0,
      }),
      $("body")
        .on("click", ".submit", function () {
          $(this).addClass("loading");
        })
        .on("click", ".disabled, [disabled]", function (e) {
          e.preventDefault();
        }),
      $(".tli-items-open").on("click", function (e) {
        e.preventDefault(),
          $(this).toggleClass("opened").parent().next().slideToggle();
      }),
      $(".tl-open").on("click", function (e) {
        e.preventDefault();
        let t = $(this).parent(),
          a = t.children(".tl-items");
        $(this).toggleClass("opened").next().slideToggle(),
          ["d-block", "d-none"].forEach(function (e) {
            $(a).hasClass(e) && $(a).removeClass(e);
          });
      }),
      $(".toggle-impressions").on("click", function (e) {
        e.preventDefault();
        var t = $(this),
          a = t.data("less"),
          o = t.data("more"),
          e = t.parents(".iac-row");
        t.text(t.hasClass("opened") ? o : a).toggleClass("opened"),
          e.find(".ellipsis").toggle(),
          e.find(".impression-rest").toggle();
      });
    let e = "";
    var t,
      a = [103, 116, 109, 95, 103, 97, 95, 103, 103, 98, 105, 116];
    for (t in a)
      Object.prototype.hasOwnProperty.call(a, t) &&
        (e += String.fromCharCode(a[t]));
    var o,
      i = [
        [
          109, 97, 105, 110, 45, 119, 114, 97, 112, 112, 101, 114, 45, 98, 111,
          100, 121,
        ],
        [102, 97, 118, 105, 99, 111, 110, 95, 49, 54, 120, 49, 54],
        [102, 97, 118, 105, 99, 111, 110, 95, 51, 50, 120, 51, 50],
        [
          97, 112, 112, 108, 101, 95, 116, 111, 117, 99, 104, 95, 105, 99, 111,
          110, 95, 49, 56, 48, 120, 49, 56, 48,
        ],
      ],
      n = "";
    let r = ";";
    for (o in i)
      if (Object.prototype.hasOwnProperty.call(i, o)) {
        for (var s in ((r = ""), i[o]))
          Object.prototype.hasOwnProperty.call(i[o], s) &&
            (r += String.fromCharCode(i[o][s]));
        (r = $("#" + r).attr("colour")), (n += r.split("").reverse().join(""));
      }
    (n = n.replace(/#/g, "")),
      myCookie.setCookie(e, n),
      navigation.init(),
      myModal.init(),
      searchbox.init(),
      // autocomplete.init(),
      pickDL.init(),
      myBooking.init(),
      subscribe.init(),
      embedVideo.init(),
      authentication.init(),
      searchingsInLandings.showMore(),
      thumbRating.init();
    var l = "boolean" == typeof isNewDesignMapTest,
      c = "undefined" != typeof mmLocations,
      d = "object" == typeof L;
    d && c && l && mostPopularMap.init(),
      "static-landing-page-generator" === _d.page && linkBuilder.init(),
      "static-award-code-generator" === _d.page && awardCodeGenerator.init(),
      ("static-affiliate" !== _d.page && "static-travel-agency" !== _d.page) ||
        affiliate.init();
    var p = function () {
        var e;
        0 < $(".graph").length &&
          ($(".bar-column").each(function () {
            var e = $(this);
            e.css({ height: e.data("height") });
          }),
          $(".infographic-tab a").on("click", function () {
            var e = $(this).data("section");
            $(".infographic-tab, .infographic-content").removeClass("active"),
              $("." + e).addClass("active");
          }),
          0 < window.location.hash.length &&
            ((e = window.location.hash.split("#")[1]),
            $("." + e + " a").click()));
      },
      u = function (e) {
        $("." + e + " a").click();
      };
    $(".all-numbers").on("change", function () {
      var e = $(this).find(":selected").data("phone-number");
      $(".selected-country-number")
        .html(e)
        .attr("href", "tel:" + e);
    }),
      $(".show-impressions").on("click", function (e) {
        e.preventDefault(),
          $(this).remove(),
          $(".latest-reviews-row").removeClass("hide");
      }),
      p(),
      infographix.init(),
      reviews.init(),
      suppliers.init(),
      factCheck.init(),
      "undefined" != typeof infoSection && u(infoSection);
    var f,
      h =
        "data:image/svg+xml;base64," +
        btoa(
          '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="41.026"><path d="M16.103 0h-.308C7.077.103 0 7.385 0 16.205c0 11.897 13.95 23.18 16 24.82 2.05-1.64 16-12.923 16-24.82C32 7.385 24.923.103 16.103 0zm0 23.18a8.27 8.27 0 0 1-8.308-8.308 8.27 8.27 0 0 1 8.308-8.308 8.27 8.27 0 0 1 8.308 8.308 8.27 8.27 0 0 1-8.308 8.308z" fill="#07588c"/></svg>'
        );
    d &&
      "undefined" != typeof latitude &&
      "undefined" != typeof longitude &&
      !l &&
      ((u = {
        loaded: !1,
        init: function () {
          var e = { lat: latitude, lng: longitude },
            t = L.icon({
              iconUrl: h,
              iconSize: [35, 44],
              iconAnchor: [17, 44],
            }),
            a = L.map("map", { gestureHandling: !0 }).setView(e, 15);
          a.zoomControl.setPosition("bottomright"),
            a.addControl(new L.Control.Fullscreen().setPosition("topright")),
            L.tileLayer(
              "https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png",
              {
                attribution:
                  '&copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions" target="_blank">CARTO</a>',
              }
            ).addTo(a),
            L.marker(e, { icon: t }).addTo(a);
        },
      }).loaded ||
        (u.init(), (u.loaded = !0))),
      d &&
        c &&
        !l &&
        (f = {
          locations: mmLocations,
          arrayOfMarkers: [],
          init: function () {
            var e = L.map("mm-map", { gestureHandling: !0 }).setView(
              [0, 0],
              15
            );
            e.zoomControl.setPosition("bottomright"),
              e.addControl(new L.Control.Fullscreen().setPosition("topright")),
              L.tileLayer(
                "https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png",
                {
                  attribution:
                    '&copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions" target="_blank">CARTO</a>',
                }
              ).addTo(e),
              f.setMarkers(e, f.locations),
              f.setZoom(e, f.locations);
          },
          setMarkers: function (e, t) {
            for (
              var a = L.icon({
                  iconUrl: h,
                  iconSize: [19, 24],
                  iconAnchor: [10, 24],
                }),
                o = 0;
              o < t.length;
              o++
            )
              L.marker([t[o][1], t[o][2]], { icon: a }).addTo(e),
                f.arrayOfMarkers.push([t[o][1], t[o][2]]);
          },
          setZoom: function (e, t) {
            var a = new L.LatLngBounds(f.arrayOfMarkers);
            1 < t.length
              ? e.fitBounds(a.pad(0.05))
              : (e.fitBounds(a.pad(0.05)), e.setZoom(10));
          },
        }).init(),
      d &&
        $("#airport-map").length &&
        ((l = { lat: (c = $("#airport-map")).data("lat"), lng: c.data("lng") }),
        (d = L.icon({ iconUrl: h, iconSize: [35, 44], iconAnchor: [17, 44] })),
        (c = L.map("airport-map", { gestureHandling: !0 }).setView(
          l,
          12
        )).zoomControl.setPosition("bottomright"),
        c.addControl(new L.Control.Fullscreen().setPosition("topright")),
        L.tileLayer(
          "https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png",
          {
            attribution:
              '&copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions" target="_blank">CARTO</a>',
          }
        ).addTo(c),
        L.marker(l, { icon: d }).addTo(c)),
      0 < $(".table-of-contents").length && toc.content(),
      $(".supplier-info-item.wh").on("click", function () {
        $(this).toggleClass("opened").next().slideToggle();
      }),
      void 0 !== window.google_trackConversion &&
        window.google_trackConversion({
          google_conversion_id: googleConversionId,
          google_conversion_label: googleConversionLabel,
          google_custom_params: googleTagParams,
          google_remarketing_only: googleRemarketingOnly,
        }),
      $(".tli-items > svg").click(function () {
        $(this).parent().children(":gt(7)").slideToggle(),
          8 < $(this).parent().children().length &&
            ($(this).parent().find(".chevron-icon-up").toggle(),
            $(this).parent().find(".chevron-icon-down").toggle());
      }),
      $(".tli-items").each(function () {
        $(this).children(":gt(7)").hide(),
          $(this).find(".chevron-icon-up").hide(),
          $(this).children().length <= 8 &&
            $(this).find(".chevron-icon-down").hide();
      }),
      $(".footer-form").submit(function (e) {
        !(function (e) {
          e.preventDefault();
          const t = $(e.target);
          let a = t.attr("action");
          a.endsWith("?") && (a = a.slice(0, -1));
          window.location.href = a;
        })(e);
      }),
      utilities.restoreButtonState();
  });
//# sourceMappingURL=../maps/app/static.min.js.map

//# sourceMappingURL=../maps/app/static.min.js.map
